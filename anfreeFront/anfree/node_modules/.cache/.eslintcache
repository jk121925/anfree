[{"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/index.js":"1","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/App.js":"2","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/reportWebVitals.js":"3","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/Todolist.js":"4","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/ClockCheckNow.js":"5","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/Welcome.js":"6","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoInput.js":"7","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoList.js":"8","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/MemoInput.js":"9","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js":"10"},{"size":504,"mtime":1648454521278,"results":"11","hashOfConfig":"12"},{"size":1586,"mtime":1648462063451,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1648271251510,"results":"14","hashOfConfig":"12"},{"size":1330,"mtime":1649052423150,"results":"15","hashOfConfig":"12"},{"size":293,"mtime":1648974051304,"results":"16","hashOfConfig":"12"},{"size":402,"mtime":1648974053648,"results":"17","hashOfConfig":"12"},{"size":876,"mtime":1649052762862,"results":"18","hashOfConfig":"12"},{"size":5145,"mtime":1649053678323,"results":"19","hashOfConfig":"12"},{"size":841,"mtime":1648974048711,"results":"20","hashOfConfig":"12"},{"size":2199,"mtime":1649053704267,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"85wm2k",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/index.js",[],[],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/App.js",["55","56"],[],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/reportWebVitals.js",[],[],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/Todolist.js",[],[],["57","58"],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/ClockCheckNow.js",[],[],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/Welcome.js",[],[],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoInput.js",[],[],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoList.js",["59","60","61","62"],[],"import { render } from \"@testing-library/react\";\nimport React, {Component} from \"react\";\nimport TodoMemoDivRender from \"./TodoMemoDiv\";\nimport \"./TodoElement.css\"\n\n// mode, contents\nclass RenderTodoList extends Component{\n    constructor(props){\n        super(props);\n        this.actionMode = 'writeMode';\n        this.writeContentMode = 'todoList';\n        this.currentSelector = -1;\n        this.state={\n            pressShiftCnt :0,\n            pressArrowDirection : ''\n        }\n    }\n    \n    swapContents(UpDown){\n        var upDownInt = (UpDown === 'up')? -1 :1;\n        var updateContentsList = Array.from(this.props._contents);\n        var temp = updateContentsList[this.currentSelector];\n        updateContentsList[this.currentSelector] = updateContentsList[this.currentSelector+upDownInt];\n        updateContentsList[this.currentSelector+upDownInt] = temp;\n        this.props.updateContentsTodoList(updateContentsList);\n    }\n\n\n    componentDidMount() {\n        window.addEventListener('keydown',(e)=>{\n            // console.log(e);\n            /*\n                위아래로 움직이는 기능 구현\n            */\n            if(e.shiftKey && 37<=e.keyCode && e.keyCode<=40 && this.actionMode === 'selectorMode'){\n                var _pressArrowDirection = e.key;\n                if(_pressArrowDirection === 'ArrowDown' && this.currentSelector!=this.props._contents.length-1){\n                    console.log(this.currentSelector)\n                    this.swapContents('down');\n                }else if(_pressArrowDirection==='ArrowUp' && this.currentSelector !=0){\n                    this.swapContents('up');\n                }\n            }\n\n            /**\n             * 메모기능 구현\n             * selector Mode 일 때 '/'를 누르면 메모 모드로 들어가기\n             * input창이 떠야하고 -> 입력하면 this.props._contents가 업데이트 되어야 함\n             * _contents의 자료구조는 list 이어야 하는가? component이어야 하는가?\n             * 아니면 javascript 구조로 class를 만들어야 하는가? 고민이네\n             * ----> class로 만들어서 memo랑 같이 관리하자 ㅇㅇ 이게 답인듯\n             */\n            if(this.actionMode === 'selectorMode' && e.key === '/'){\n                if(this.writeContentMode === 'todoList') this.writeContentMode = 'memoList';\n                else this.writeContentMode = 'todoList';\n                this.forceUpdate();\n            }\n\n            /*\n                delete 기능 구현\n            */\n            if(e.shiftKey && e.key === 'Delete'){\n                var _deleteContents = Array.from(this.props._contents)\n                if(this.props._contents.length ===1){\n                    _deleteContents = []\n                    this.currentSelector = this.currentSelector-1;\n                    this.mode = 'writeMode'\n                }\n                else if(this.props._contents.length !==0){\n                    for(var i=this.currentSelector; i<_deleteContents.length-1; i++){\n                        _deleteContents[i] = _deleteContents[i+1];\n                    }\n                    _deleteContents = _deleteContents.slice(0,_deleteContents.length-1);\n                    if(this.currentSelector === this.props._contents.length-1){\n                        this.currentSelector = this.currentSelector-1;\n                    }\n                }\n                this.props.updateContentsTodoList(_deleteContents);\n            }\n            /*\n                writeMode vs selectorMode \n                selectorMode면 움직이고 있는 중입니다.\n            */\n            if(37<=e.keyCode && e.keyCode<=40){\n                var _pressArrowDirection = e.key;\n                if(_pressArrowDirection === 'ArrowDown'){\n                    if(this.actionMode==='writeMode' && this.props._contents.length!==0){\n                        this.currentSelector = 0;\n                        this.actionMode = 'selectorMode'\n                    }else if(this.actionMode === 'selectorMode'){\n                        this.currentSelector = (this.currentSelector === this.props._contents.length-1)? this.props._contents.length-1 : this.currentSelector+1;                        \n                    }\n                }else if(_pressArrowDirection === 'ArrowUp'){\n                    if(this.actionMode === 'selectorMode'){\n                        if(this.currentSelector === 0){\n                            this.actionMode ='writeMode'\n                        }else{\n                            this.currentSelector = (this.currentSelector === 0)? 0 : this.currentSelector-1;\n                        }\n                    }\n                }\n                this.forceUpdate();\n            }//end arrow if test\n            \n        })\n    }\n\n\n\n    render(){\n        return(\n            <TodoMemoDivRender \n            _contents={this.props._contents}\n            _mode = {this.actionMode}\n            _currentSelector = {this.currentSelector}\n            _writeContentMode = {this.writeContentMode}\n            ></TodoMemoDivRender>\n            \n\n        )\n    }\n}\n\nexport default RenderTodoList;","/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/MemoInput.js",["63"],[],"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js",["64","65","66"],[],"import React from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElement.css\"\n\n\n\nfunction MemoDiv({memoElement,todoElement}){\n    var memoKey = todoElement + \"-\" + memoElement;\n    return(\n        <div className=\"memoElement\" key ={memoKey}>\n            {memoElement}\n        </div>\n    )\n};\n\n\nfunction TodoMemoDivRender({_contents,_mode,_currentSelector,_writeContentMode}){\n    var returnList =[]\n    var renderContainer = Array.from(_contents);\n    var i=0;\n\n    console.log(_contents,_mode,_currentSelector,_writeContentMode);\n\n    if(_mode === 'selectorMode'){\n        while(i<renderContainer.length){\n            if(_currentSelector!==-1 && i===_currentSelector){\n                returnList.push(\n                    <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        <MemoInput></MemoInput>\n                        {renderContainer[i].memolist.map(memoElement=>(\n                            <MemoDiv memoElement={memoElement} todoElement={renderContainer[i].todolist}/>\n                        ))}\n                    </div>\n                );\n            }else{\n                returnList.push(\n                    <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {renderContainer[i].memolist.map(memoElement=>(\n                            <MemoDiv memoElement={memoElement} todoElement={renderContainer[i].todolist}/>\n                        ))}\n                    </div>\n                );\n            }\n            i=i+1;\n        }\n    }else{\n        while(i<renderContainer.length){\n            returnList.push(\n            <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                {renderContainer[i].todolist}\n                {renderContainer[i].memolist.map(memoElement=>(\n                    <MemoDiv memoElement={memoElement} todoElement={renderContainer[i].todolist}/>\n                ))}\n            </div>\n            );\n            \n            i=i+1\n        }\n    }\n    return(\n        returnList\n    );\n};\n\nexport default TodoMemoDivRender;",{"ruleId":"67","severity":1,"message":"68","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":59,"column":9,"nodeType":"73","messageId":"74","endLine":59,"endColumn":22},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"67","severity":1,"message":"79","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":37,"column":80,"nodeType":"82","messageId":"83","endLine":37,"endColumn":82},{"ruleId":"80","severity":1,"message":"81","line":40,"column":83,"nodeType":"82","messageId":"83","endLine":40,"endColumn":85},{"ruleId":"84","severity":1,"message":"85","line":85,"column":21,"nodeType":"69","messageId":"86","endLine":85,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":4,"column":5,"nodeType":"89","messageId":"90","endLine":6,"endColumn":6},{"ruleId":"91","severity":1,"message":"92","line":31,"column":58,"nodeType":"93","messageId":"94","endLine":33,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":40,"column":58,"nodeType":"93","messageId":"94","endLine":42,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":53,"column":50,"nodeType":"93","messageId":"94","endLine":55,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component History_nav must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'render' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'_pressArrowDirection' is already defined.","redeclared","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]