{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoMemoDivReady(_ref) {\n  _s();\n\n  let {\n    renderTodoList,\n    ActionMode,\n    todoSelector,\n    writeMode,\n    memoSelector\n  } = _ref;\n  console.log(renderTodoList, ActionMode, todoSelector, writeMode, memoSelector);\n  const [preContents, AfterContents] = useState(renderTodoList);\n  var returnList = [];\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  };\n\n  const makeMemoDivList = (memoListByContent, _memoSelector) => {\n    return memoListByContent.map((memoElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _memoSelector === index ? \"memoElement-now\" : \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this));\n  };\n\n  var renderContainer = Array.from(renderTodoList);\n  var i = 0; // if(ActionMode === 'selectorMode'){\n  //     while(i<renderContainer.length){\n  //         if(todoSelector!==-1 && i===todoSelector){\n  //             if(writeMode ==='memoList'){\n  //                 returnList.push(\n  //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n  //                         {renderContainer[i].todolist}\n  //                         <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n  //                             <RenderMemoInput\n  //                                 _memoContents = {renderContainer}\n  //                                 _memoIdx = {todoSelector}\n  //                                 _setterContents = {setAfterContents}\n  //                             ></RenderMemoInput> \n  //                         </div>\n  //                         {makeMemoDivList(renderContainer[i].memolist,memoSelector)}\n  //                     </div>\n  //                 );\n  //             }else{\n  //                 returnList.push(\n  //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n  //                         {renderContainer[i].todolist}\n  //                         {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //                     </div>\n  //                 );\n  //             }\n  //         }else{\n  //             returnList.push(\n  //                 <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n  //                     {renderContainer[i].todolist}\n  //                     {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //                 </div>\n  //             );\n  //         }\n  //         i=i+1;\n  //     }//end while\n  // }else{\n  //     while(i<renderContainer.length){\n  //         returnList.push(\n  //         <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n  //             {renderContainer[i].todolist}\n  //             {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //         </div>\n  //         );\n  //         i=i+1\n  //     }\n  // }\n\n  return returnList;\n}\n\n_s(TodoMemoDivReady, \"Ro16sWxM5X5jChFMUYBOB0kRWUw=\");\n\n_c = TodoMemoDivReady;\n;\nexport default TodoMemoDivReady;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMemoDivReady\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js"],"names":["React","useState","RenderMemoInput","TodoMemoDivReady","renderTodoList","ActionMode","todoSelector","writeMode","memoSelector","console","log","preContents","AfterContents","returnList","setAfterContents","update","makeMemoDivList","memoListByContent","_memoSelector","map","memoElement","index","i","renderContainer","Array","from"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,8BAAP;;;AAEA,SAASC,gBAAT,OAA0F;AAAA;;AAAA,MAAhE;AAACC,IAAAA,cAAD;AAAgBC,IAAAA,UAAhB;AAA2BC,IAAAA,YAA3B;AAAwCC,IAAAA,SAAxC;AAAkDC,IAAAA;AAAlD,GAAgE;AACtFC,EAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ,EAA2BC,UAA3B,EAAsCC,YAAtC,EAAmDC,SAAnD,EAA6DC,YAA7D;AACA,QAAM,CAACG,WAAD,EAAcC,aAAd,IAA+BX,QAAQ,CAACG,cAAD,CAA7C;AACA,MAAIS,UAAU,GAAE,EAAhB;;AAEA,QAAMC,gBAAgB,GAAGC,MAAD,IAAU;AAC9BH,IAAAA,aAAa,CAACG,MAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAE,CAACC,iBAAD,EAAmBC,aAAnB,KAAmC;AACtD,WACID,iBAAiB,CAACE,GAAlB,CAAsB,CAACC,WAAD,EAAaC,KAAb,kBAClB;AAAK,MAAA,SAAS,EAAGH,aAAa,KAAGG,KAAjB,GAA2B,iBAA3B,GAA6C,aAA7D;AAAA,gBAAiGD;AAAjG,OAAiFE,CAAC,GAACF,WAAnF;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,GAND;;AAUA,MAAIG,eAAe,GAAGC,KAAK,CAACC,IAAN,CAAWrB,cAAX,CAAtB;AACA,MAAIkB,CAAC,GAAC,CAAN,CApBsF,CAsBtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,SACIT,UADJ;AAGH;;GAxEQV,gB;;KAAAA,gB;AAwER;AAED,eAAeA,gBAAf","sourcesContent":["import React ,{useState}from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\"\n\nfunction TodoMemoDivReady({renderTodoList,ActionMode,todoSelector,writeMode,memoSelector}){\n    console.log(renderTodoList,ActionMode,todoSelector,writeMode,memoSelector);\n    const [preContents, AfterContents] = useState(renderTodoList);\n    var returnList =[]\n\n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n\n    const makeMemoDivList =(memoListByContent,_memoSelector)=>{\n        return(\n            memoListByContent.map((memoElement,index)=>(\n                <div className={(_memoSelector===index ) ? \"memoElement-now\":\"memoElement\"} key={i+memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n    \n\n\n    var renderContainer = Array.from(renderTodoList);\n    var i=0;\n    \n    // if(ActionMode === 'selectorMode'){\n    //     while(i<renderContainer.length){\n    //         if(todoSelector!==-1 && i===todoSelector){\n    //             if(writeMode ==='memoList'){\n    //                 returnList.push(\n    //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n    //                         {renderContainer[i].todolist}\n    //                         <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n    //                             <RenderMemoInput\n    //                                 _memoContents = {renderContainer}\n    //                                 _memoIdx = {todoSelector}\n    //                                 _setterContents = {setAfterContents}\n    //                             ></RenderMemoInput> \n    //                         </div>\n    //                         {makeMemoDivList(renderContainer[i].memolist,memoSelector)}\n    //                     </div>\n    //                 );\n    //             }else{\n    //                 returnList.push(\n    //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n    //                         {renderContainer[i].todolist}\n    //                         {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //                     </div>\n    //                 );\n    //             }\n    //         }else{\n    //             returnList.push(\n    //                 <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n    //                     {renderContainer[i].todolist}\n    //                     {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //                 </div>\n    //             );\n    //         }\n    //         i=i+1;\n    //     }//end while\n    // }else{\n    //     while(i<renderContainer.length){\n    //         returnList.push(\n    //         <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n    //             {renderContainer[i].todolist}\n    //             {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //         </div>\n    //         );\n            \n    //         i=i+1\n    //     }\n    // }\n    return(\n        returnList\n    );\n};\n\nexport default TodoMemoDivReady; "]},"metadata":{},"sourceType":"module"}