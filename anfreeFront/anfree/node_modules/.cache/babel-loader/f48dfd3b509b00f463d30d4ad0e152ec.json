{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoMemoDivReady(props) {\n  _s();\n\n  const {\n    listSelector,\n    todoSelector,\n    renderTodoList,\n    writeMode,\n    memoSelector\n  } = props;\n  console.log(props);\n  const [preContents, AfterContents] = useState(renderTodoList);\n  var returnRenderList = [];\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  };\n\n  const makeMemoDivList = (memoListByList, memoSelector) => {\n    return memoListByList.map((memoElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: memoSelector === index ? \"memoElement-now\" : \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this));\n  };\n\n  const makeReadyTodoDivList = (listSelector, todoSelector, renderTodoList, memoSelector) => {\n    let tempArr = [];\n    let i = 0;\n    let setClassName = \"READY\";\n\n    while (i < renderTodoList.length) {\n      tempArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: todoSelector === i ? setClassName + \"-now\" : setClassName,\n        children: [renderTodoList[listSelector][i].todoList, makeMemoDivList(renderTodoList[listSelector][i].memoList, memoSelector)]\n      }, renderTodoList[i] + \"-\" + i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this));\n      i = i + 1;\n    }\n\n    return tempArr;\n  };\n\n  let itr = 0;\n  returnRenderList.push(makeReadyTodoDivList(listSelector, todoSelector, renderTodoList, memoSelector)); // var renderContainer = Array.from(renderTodoList);\n  // var i=0;\n  // if(ActionMode === 'selectorMode'){\n  //     while(i<renderContainer.length){\n  //         if(todoSelector!==-1 && i===todoSelector){\n  //             if(writeMode ==='memoList'){\n  //                 returnList.push(\n  //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n  //                         {renderContainer[i].todolist}\n  //                         <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n  //                             <RenderMemoInput\n  //                                 _memoContents = {renderContainer}\n  //                                 _memoIdx = {todoSelector}\n  //                                 _setterContents = {setAfterContents}\n  //                             ></RenderMemoInput> \n  //                         </div>\n  //                         {makeMemoDivList(renderContainer[i].memolist,memoSelector)}\n  //                     </div>\n  //                 );\n  //             }else{\n  //                 returnList.push(\n  //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n  //                         {renderContainer[i].todolist}\n  //                         {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //                     </div>\n  //                 );\n  //             }\n  //         }else{\n  //             returnList.push(\n  //                 <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n  //                     {renderContainer[i].todolist}\n  //                     {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //                 </div>\n  //             );\n  //         }\n  //         i=i+1;\n  //     }//end while\n  // }else{\n  //     while(i<renderContainer.length){\n  //         returnList.push(\n  //         <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n  //             {renderContainer[i].todolist}\n  //             {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //         </div>\n  //         );\n  //         i=i+1\n  //     }\n  // }\n\n  return returnRenderList;\n}\n\n_s(TodoMemoDivReady, \"Ro16sWxM5X5jChFMUYBOB0kRWUw=\");\n\n_c = TodoMemoDivReady;\n;\nexport default TodoMemoDivReady;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMemoDivReady\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js"],"names":["React","useState","RenderMemoInput","TodoMemoDivReady","props","listSelector","todoSelector","renderTodoList","writeMode","memoSelector","console","log","preContents","AfterContents","returnRenderList","setAfterContents","update","makeMemoDivList","memoListByList","map","memoElement","index","i","makeReadyTodoDivList","tempArr","setClassName","length","push","todoList","memoList","itr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA8B,OAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,8BAAP;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAAA;;AAC5B,QAAM;AAACC,IAAAA,YAAD;AAAcC,IAAAA,YAAd;AAA2BC,IAAAA,cAA3B;AAA0CC,IAAAA,SAA1C;AAAoDC,IAAAA;AAApD,MAAoEL,KAA1E;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA,QAAM,CAACQ,WAAD,EAAcC,aAAd,IAA+BZ,QAAQ,CAACM,cAAD,CAA7C;AACA,MAAIO,gBAAgB,GAAE,EAAtB;;AAEA,QAAMC,gBAAgB,GAAGC,MAAD,IAAU;AAC9BH,IAAAA,aAAa,CAACG,MAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAE,CAACC,cAAD,EAAgBT,YAAhB,KAA+B;AAClD,WACIS,cAAc,CAACC,GAAf,CAAmB,CAACC,WAAD,EAAaC,KAAb,kBACf;AAAK,MAAA,SAAS,EAAGZ,YAAY,KAAGY,KAAhB,GAA0B,iBAA1B,GAA4C,aAA5D;AAAA,gBAAgGD;AAAhG,OAAgFE,CAAC,GAACF,WAAlF;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,GAND;;AAQA,QAAMG,oBAAoB,GAAG,CAAClB,YAAD,EAAcC,YAAd,EAA2BC,cAA3B,EAA0CE,YAA1C,KAA0D;AACnF,QAAIe,OAAO,GAAG,EAAd;AAAkB,QAAIF,CAAC,GAAC,CAAN;AAClB,QAAIG,YAAY,GAAG,OAAnB;;AACA,WAAMH,CAAC,GAACf,cAAc,CAACmB,MAAvB,EAA8B;AAC1BF,MAAAA,OAAO,CAACG,IAAR,eACI;AAAK,QAAA,SAAS,EAAGrB,YAAY,KAAKgB,CAAlB,GAAsBG,YAAY,GAAG,MAArC,GAA8CA,YAA9D;AAAA,mBACKlB,cAAc,CAACF,YAAD,CAAd,CAA6BiB,CAA7B,EAAgCM,QADrC,EAEKX,eAAe,CAACV,cAAc,CAACF,YAAD,CAAd,CAA6BiB,CAA7B,EAAgCO,QAAjC,EAA0CpB,YAA1C,CAFpB;AAAA,SAAiFF,cAAc,CAACe,CAAD,CAAd,GAAoB,GAApB,GAA0BA,CAA3G;AAAA;AAAA;AAAA;AAAA,cADJ;AAMAA,MAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AACH;;AACD,WAAOE,OAAP;AACH,GAbD;;AAeA,MAAIM,GAAG,GAAE,CAAT;AACAhB,EAAAA,gBAAgB,CAACa,IAAjB,CAAsBJ,oBAAoB,CAAClB,YAAD,EAAcC,YAAd,EAA2BC,cAA3B,EAA0CE,YAA1C,CAA1C,EAnC4B,CAsC5B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,SACIK,gBADJ;AAGH;;GA3FQX,gB;;KAAAA,gB;AA2FR;AAED,eAAeA,gBAAf","sourcesContent":["import React ,{ useState}from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\"\n\nfunction TodoMemoDivReady(props){\n    const {listSelector,todoSelector,renderTodoList,writeMode,memoSelector} = props;\n    console.log(props);\n\n    const [preContents, AfterContents] = useState(renderTodoList);\n    var returnRenderList =[]\n\n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n\n    const makeMemoDivList =(memoListByList,memoSelector)=>{\n        return(\n            memoListByList.map((memoElement,index)=>(\n                <div className={(memoSelector===index ) ? \"memoElement-now\":\"memoElement\"} key={i+memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n\n    const makeReadyTodoDivList = (listSelector,todoSelector,renderTodoList,memoSelector) =>{\n        let tempArr = []; let i=0;\n        let setClassName = \"READY\";\n        while(i<renderTodoList.length){\n            tempArr.push(\n                <div className={(todoSelector === i)? setClassName + \"-now\" : setClassName} key={renderTodoList[i] + \"-\" + i}>\n                    {renderTodoList[listSelector][i].todoList}\n                    {makeMemoDivList(renderTodoList[listSelector][i].memoList,memoSelector)}\n                </div>\n            )\n            i = i+1;\n        }\n        return tempArr;\n    }\n    \n    let itr =0;\n    returnRenderList.push(makeReadyTodoDivList(listSelector,todoSelector,renderTodoList,memoSelector));\n\n\n    // var renderContainer = Array.from(renderTodoList);\n    // var i=0;\n    \n    // if(ActionMode === 'selectorMode'){\n    //     while(i<renderContainer.length){\n    //         if(todoSelector!==-1 && i===todoSelector){\n    //             if(writeMode ==='memoList'){\n    //                 returnList.push(\n    //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n    //                         {renderContainer[i].todolist}\n    //                         <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n    //                             <RenderMemoInput\n    //                                 _memoContents = {renderContainer}\n    //                                 _memoIdx = {todoSelector}\n    //                                 _setterContents = {setAfterContents}\n    //                             ></RenderMemoInput> \n    //                         </div>\n    //                         {makeMemoDivList(renderContainer[i].memolist,memoSelector)}\n    //                     </div>\n    //                 );\n    //             }else{\n    //                 returnList.push(\n    //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n    //                         {renderContainer[i].todolist}\n    //                         {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //                     </div>\n    //                 );\n    //             }\n    //         }else{\n    //             returnList.push(\n    //                 <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n    //                     {renderContainer[i].todolist}\n    //                     {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //                 </div>\n    //             );\n    //         }\n    //         i=i+1;\n    //     }//end while\n    // }else{\n    //     while(i<renderContainer.length){\n    //         returnList.push(\n    //         <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n    //             {renderContainer[i].todolist}\n    //             {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //         </div>\n    //         );\n            \n    //         i=i+1\n    //     }\n    // }\n    return(\n        returnRenderList\n    );\n};\n\nexport default TodoMemoDivReady; "]},"metadata":{},"sourceType":"module"}