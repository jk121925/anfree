{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDiveFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementFilter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderTodoMemoDiveFilter(_ref) {\n  _s();\n\n  let {\n    _mode,\n    _currentTodoSelector,\n    _currentMemoSelector,\n    _filterTodoCursorListCnt,\n    _filterTodoInnerCursor\n  } = _ref;\n  const [preContents, AfterContents] = useState(_contents);\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  }; // make memo <div> list\n  // 메모 리스트를 만드는 component\n\n\n  const makeMemoDivList = (memoListByContent, __currentMemoSelector) => {\n    return memoListByContent.map((memoElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: __currentMemoSelector === index ? \"memoElement-now\" : \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this));\n  };\n\n  var renderContainer = Array.from(_contents);\n  var i = 0;\n\n  if (_mode === 'selectorMode') {\n    while (i < renderContainer.length) {\n      if (renderContainer[i].todoState === \"ready\") {\n        if (_currentTodoSelector !== -1 && i === _currentTodoSelector) {\n          readyList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ready-now\",\n            children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, _currentMemoSelector)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this));\n        } else {\n          readyList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ready\",\n            children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this));\n        }\n      } else if (renderContainer[i].todoState === \"NotWillDo\") {\n        console.log(\"renderContainer willNotDo: \", renderContainer[i]);\n        willNotDoList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"WillNotDo\",\n          children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n        }, renderContainer[i].todolist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this));\n      } else {\n        console.log(\"renderContainer WillDo: \", renderContainer[i]);\n        willDoList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"WillDo\",\n          children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n        }, renderContainer[i].todolist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this));\n      }\n\n      i = i + 1;\n    } //end while\n\n  } else {\n    while (i < renderContainer.length) {\n      readyList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoMainElement\",\n        children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n      }, renderContainer[i].todolist, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this));\n      i = i + 1;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filterDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"willNotDoListDiv\",\n      children: willNotDoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"readyDiv\",\n      children: readyList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"willDoListDiv\",\n      children: willDoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenderTodoMemoDiveFilter, \"BmVK3FTFSWSFaJR3qCfacxVLgHI=\");\n\n_c = RenderTodoMemoDiveFilter;\n;\nexport default RenderTodoMemoDiveFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderTodoMemoDiveFilter\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDiveFilter.js"],"names":["React","useState","RenderMemoInput","RenderTodoMemoDiveFilter","_mode","_currentTodoSelector","_currentMemoSelector","_filterTodoCursorListCnt","_filterTodoInnerCursor","preContents","AfterContents","_contents","setAfterContents","update","makeMemoDivList","memoListByContent","__currentMemoSelector","map","memoElement","index","i","renderContainer","Array","from","length","todoState","readyList","push","todolist","memolist","console","log","willNotDoList","willDoList"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementFilter.css\"\n\nfunction RenderTodoMemoDiveFilter({_mode,_currentTodoSelector,_currentMemoSelector,_filterTodoCursorListCnt,_filterTodoInnerCursor}){\n    const [preContents, AfterContents] = useState(_contents);\n    \n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n\n    // make memo <div> list\n    // 메모 리스트를 만드는 component\n    const makeMemoDivList =(memoListByContent,__currentMemoSelector)=>{\n        return(\n            memoListByContent.map((memoElement,index)=>(\n                <div className={(__currentMemoSelector===index ) ? \"memoElement-now\":\"memoElement\"} key={i+memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n    \n\n\n    var renderContainer = Array.from(_contents);\n    var i=0;\n    \n    if(_mode === 'selectorMode'){\n        while(i<renderContainer.length){\n            if(renderContainer[i].todoState ===\"ready\"){\n                if(_currentTodoSelector!==-1 && i===_currentTodoSelector){\n                        readyList.push(\n                            <div className=\"ready-now\" key={renderContainer[i].todolist}>\n                                {renderContainer[i].todolist}\n                                {makeMemoDivList(renderContainer[i].memolist,_currentMemoSelector)}\n                            </div>\n                        );\n                    }\n                    else{\n                        readyList.push(\n                            <div className=\"ready\" key={renderContainer[i].todolist}>\n                                {renderContainer[i].todolist}\n                                {makeMemoDivList(renderContainer[i].memolist,-1)}\n                            </div>\n                        );\n                    }\n            }else if(renderContainer[i].todoState ===\"NotWillDo\"){\n                console.log(\"renderContainer willNotDo: \", renderContainer[i])\n                willNotDoList.push(\n                    <div className=\"WillNotDo\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {makeMemoDivList(renderContainer[i].memolist,-1)}\n                    </div>\n                );\n            }else{\n                console.log(\"renderContainer WillDo: \", renderContainer[i])\n                willDoList.push(\n                    <div className=\"WillDo\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {makeMemoDivList(renderContainer[i].memolist,-1)}\n                    </div>\n                );\n            }\n            i=i+1;\n        }//end while\n    }else{\n        while(i<renderContainer.length){\n            readyList.push(\n            <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                {renderContainer[i].todolist}\n                {makeMemoDivList(renderContainer[i].memolist,-1)}\n            </div>\n            );\n            \n            i=i+1\n        }\n    }\n    return(\n        <div className=\"filterDiv\">\n            <div className=\"willNotDoListDiv\">\n                {willNotDoList}\n            </div>\n            <div className=\"readyDiv\">\n                {readyList}\n            </div>\n            <div className=\"willDoListDiv\">\n                {willDoList}\n            </div>\n        </div>\n    );\n};\n\nexport default RenderTodoMemoDiveFilter; "]},"metadata":{},"sourceType":"module"}