{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/Todolist.js\";\nimport React, { Component } from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\";\nimport RenderTodoInput from \"./RenderTodoInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todolist extends Component {\n  constructor(props) {\n    super(props);\n    this.contentsMaxIdx = 0;\n    this.state = {\n      contents: [],\n      _todoMode: 'writeTodo',\n      _currentSelector: 0,\n      _pressCnt: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RenderTodoInput, {\n        _contents: this.state.contents,\n        _mode: this.state._todoMode,\n        modeChange: function (changeMode) {\n          this.setState({\n            _todoMode: changeMode\n          });\n          console.log(this.state._currentSelector);\n        }.bind(this),\n        updateContents: function (updatelist) {\n          this.contentsMaxIdx = this.contentsMaxIdx + 1;\n          this.setState({\n            contents: updatelist,\n            _currentSelector: this.contentsMaxIdx\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RenderTodoList, {\n        _maxIdx: this.state._currentSelector,\n        _mode: this.state._todoMode,\n        _contents: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Todolist;","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/Todolist.js"],"names":["React","Component","RenderTodoList","RenderTodoInput","Todolist","constructor","props","contentsMaxIdx","state","contents","_todoMode","_currentSelector","_pressCnt","render","changeMode","setState","console","log","bind","updatelist"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;;AAIA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAqB,CAArB;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,SAAS,EAAG,WAFH;AAGTC,MAAAA,gBAAgB,EAAG,CAHV;AAITC,MAAAA,SAAS,EAAG;AAJH,KAAX;AAMD;;AAMDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE,QAAC,eAAD;AACA,QAAA,SAAS,EAAI,KAAKL,KAAL,CAAWC,QADxB;AAEA,QAAA,KAAK,EAAI,KAAKD,KAAL,CAAWE,SAFpB;AAGA,QAAA,UAAU,EAAI,UAASI,UAAT,EAAoB;AAChC,eAAKC,QAAL,CAAc;AACZL,YAAAA,SAAS,EAAGI;AADA,WAAd;AAGAE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWG,gBAAvB;AACD,SALa,CAKZO,IALY,CAKP,IALO,CAHd;AASA,QAAA,cAAc,EAAE,UAASC,UAAT,EAAoB;AAClC,eAAKZ,cAAL,GAAsB,KAAKA,cAAL,GAAoB,CAA1C;AACA,eAAKQ,QAAL,CAAc;AACZN,YAAAA,QAAQ,EAAGU,UADC;AAEZR,YAAAA,gBAAgB,EAAG,KAAKJ;AAFZ,WAAd;AAID,SANe,CAMdW,IANc,CAMT,IANS;AAThB;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,cAAD;AACE,QAAA,OAAO,EAAI,KAAKV,KAAL,CAAWG,gBADxB;AAEE,QAAA,KAAK,EAAI,KAAKH,KAAL,CAAWE,SAFtB;AAGE,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC;AAHxB;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AA3C2B;;AA8C9B,eAAeL,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\"\nimport RenderTodoInput from \"./RenderTodoInput.js\";\n\n\n\nclass Todolist extends Component{\n    constructor(props){\n      super(props);\n      this.contentsMaxIdx =0;\n      this.state={\n        contents :[],\n        _todoMode : 'writeTodo',\n        _currentSelector : 0,\n        _pressCnt : 0\n      }\n    }\n    \n    \n\n\n\n    render(){\n      return(\n        <div>\n          <RenderTodoInput \n          _contents = {this.state.contents} \n          _mode = {this.state._todoMode}\n          modeChange = {function(changeMode){\n            this.setState({\n              _todoMode : changeMode\n            })\n            console.log(this.state._currentSelector);\n          }.bind(this)}\n          updateContents={function(updatelist){\n            this.contentsMaxIdx = this.contentsMaxIdx+1;\n            this.setState({\n              contents : updatelist,\n              _currentSelector : this.contentsMaxIdx\n            })\n          }.bind(this)}></RenderTodoInput>\n          <RenderTodoList \n            _maxIdx = {this.state._currentSelector}\n            _mode = {this.state._todoMode}\n            _contents={this.state.contents}\n          ></RenderTodoList>\n        </div>\n        \n      );\n    }\n  }\n\n  export default Todolist;"]},"metadata":{},"sourceType":"module"}