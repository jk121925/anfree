{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\";\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\";\nimport Modal from \"./Modal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppTodolist(props) {\n  _s();\n\n  const [prevTodoList, nextTodoList] = useState([[], [], []]);\n  const [prevModalState, nextModalState] = useState(false);\n  console.log(props);\n\n  const modalMessage = nextprev => {\n    if (nextprev == 'Next') {\n      let returnstr;\n\n      if (nextprev === 'Next') {\n        returnstr = \"Few second after you go to Next step\";\n      } else if (nextprev === 'Prev') {\n        returnstr = \"Few second after you go to Previous step\";\n      }\n\n      return returnstr;\n    }\n  };\n\n  useEffect(() => {\n    nextModalState(true);\n  }, [props.nowStage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      _modalState: prevModalState,\n      _header: props.stageState[props.nowStage],\n      closeModal: nextModalState,\n      children: modalMessage('Next')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), props.nowStage === 0 ? /*#__PURE__*/_jsxDEV(ControllerTodoInput, {\n      _stage: props.nowStage,\n      _contents: prevTodoList,\n      updateContents: nextTodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : null, props.nowStage === 0 ? /*#__PURE__*/_jsxDEV(ControllerReadyTodoList, {\n      _contents: prevTodoList // _stage = {this.props._props.stageState[this.state.stage]}\n      ,\n      _stage: props.nowStage,\n      ㅁ: true,\n      updateContentsTodoList: nextTodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this) : props.nowStage === 1 ? /*#__PURE__*/_jsxDEV(ControllerFilterTodoList, {\n      _contents: prevTodoList // _stage = {this.props._props.stageState[this.state.stage]}\n      ,\n      _stage: props.nowStage,\n      updateContentsTodoList: nextTodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this) : console.log(\"hi\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n} // class AppTodolist extends Component{\n//     constructor(props){\n//       super(props);\n//       this.state={\n//         contents :[[],[],[]],\n//         stage : 0,\n//         modalState : false,\n//         NextPrev : 'Next',\n//         defaultActionState : \"writeMode\"\n//       }\n//     }\n//     modalMessage(NextPrev){\n//       let returnstr;\n//       if(NextPrev==='Next'){\n//         returnstr = \"Few second after you go to Next step\";\n//       }else if(NextPrev==='Prev'){\n//         returnstr = \"Few second after you go to Previous step\"\n//       }\n//       return returnstr;\n//     }\n//     render(){\n//       return(\n//         <div>\n//           <Modal\n//           _modalState={this.state.modalState}\n//           _header={this.props._props.stageState[this.state.stage]}\n//           closeModal={function(){\n//             this.setState({\n//               modalState : false\n//             })\n//           }.bind(this)}\n//           >\n//             {this.modalMessage(this.state.NextPrev)}\n//           </Modal>\n//           {this.state.stage === 0 ? (\n//             <ControllerTodoInput \n//             _stage = {this.props._stageState[this.state.stage]}\n//             _contents = {this.state.contents} \n//             updateContents={function(updatelist){\n//               this.setState({\n//                 contents : updatelist,\n//               })\n//             }.bind(this)}></ControllerTodoInput>\n//           ):null}\n//           {\n//             (this.state.stage === 0) ? (\n//               <ControllerReadyTodoList \n//                 _contents={this.state.contents}\n//                 // _stage = {this.props._stageState[this.state.stage]}\n//                 _stage = {this.state.stage}\n//                 updateContentsTodoList={function(updatelist){\n//                   this.setState({\n//                     contents : updatelist\n//                   })\n//                 }.bind(this)}\n//               ></ControllerReadyTodoList>\n//             ) : (\n//               (this.state.stage === 1) ? (\n//                 <ControllerFilterTodoList \n//                   _contents={this.state.contents}\n//                   // _stage = {this.props._stageState[this.state.stage]}\n//                   _stage = {this.state.stage}\n//                   updateContentsTodoList={function(updatelist){\n//                     this.setState({\n//                       contents : updatelist\n//                     })\n//                   }.bind(this)}\n//               ></ControllerFilterTodoList>\n//               ) : (\n//                 console.log(\"hi\")\n//               )\n//             )\n//           }\n//         </div>\n//       );\n//     }\n//   }\n\n\n_s(AppTodolist, \"MGiS7MiiZSCQFxNPlkG8BWzSfKA=\");\n\n_c = AppTodolist;\nexport default AppTodolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTodolist\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js"],"names":["React","useEffect","useState","ControllerReadyTodoList","ControllerTodoInput","ControllerFilterTodoList","Modal","AppTodolist","props","prevTodoList","nextTodoList","prevModalState","nextModalState","console","log","modalMessage","nextprev","returnstr","nowStage","stageState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,uBAAP,MAAoC,8BAApC;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BR,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAD,CAA7C;AACA,QAAM,CAACS,cAAD,EAAiBC,cAAjB,IAAmCV,QAAQ,CAAC,KAAD,CAAjD;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AACA,QAAMO,YAAY,GAAIC,QAAD,IAAY;AAC/B,QAAGA,QAAQ,IAAI,MAAf,EAAsB;AACpB,UAAIC,SAAJ;;AACA,UAAGD,QAAQ,KAAG,MAAd,EAAqB;AACnBC,QAAAA,SAAS,GAAG,sCAAZ;AACD,OAFD,MAEM,IAAGD,QAAQ,KAAG,MAAd,EAAqB;AACzBC,QAAAA,SAAS,GAAG,0CAAZ;AACD;;AACD,aAAOA,SAAP;AACD;AACF,GAVD;;AAWAhB,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFQ,EAEP,CAACJ,KAAK,CAACU,QAAP,CAFO,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,KAAD;AACA,MAAA,WAAW,EAAEP,cADb;AAEA,MAAA,OAAO,EAAEH,KAAK,CAACW,UAAN,CAAiBX,KAAK,CAACU,QAAvB,CAFT;AAGA,MAAA,UAAU,EAAEN,cAHZ;AAAA,gBAKCG,YAAY,CAAC,MAAD;AALb;AAAA;AAAA;AAAA;AAAA,YADF,EAUGP,KAAK,CAACU,QAAN,KAAmB,CAAnB,gBACC,QAAC,mBAAD;AACA,MAAA,MAAM,EAAIV,KAAK,CAACU,QADhB;AAEA,MAAA,SAAS,EAAIT,YAFb;AAIA,MAAA,cAAc,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADD,GAMC,IAhBJ,EAkBKF,KAAK,CAACU,QAAN,KAAmB,CAApB,gBACE,QAAC,uBAAD;AACE,MAAA,SAAS,EAAET,YADb,CAEE;AAFF;AAGE,MAAA,MAAM,EAAID,KAAK,CAACU,QAHlB;AAG2B,MAAA,CAAC,MAH5B;AAIE,MAAA,sBAAsB,EAAER;AAJ1B;AAAA;AAAA;AAAA;AAAA,YADF,GAQGF,KAAK,CAACU,QAAN,KAAmB,CAApB,gBACE,QAAC,wBAAD;AACE,MAAA,SAAS,EAAET,YADb,CAEE;AAFF;AAGE,MAAA,MAAM,EAAID,KAAK,CAACU,QAHlB;AAIE,MAAA,sBAAsB,EAAER;AAJ1B;AAAA;AAAA;AAAA;AAAA,YADF,GAQEG,OAAO,CAACC,GAAR,CAAY,IAAZ,CAlCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;;;GAzJSP,W;;KAAAA,W;AA2JP,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\nimport Modal from \"./Modal.js\";\n\nfunction AppTodolist(props) {\n  const [prevTodoList, nextTodoList] = useState([[],[],[]]);\n  const [prevModalState, nextModalState] = useState(false);\n  console.log(props)\n  const modalMessage = (nextprev)=>{\n    if(nextprev == 'Next'){\n      let returnstr;\n      if(nextprev==='Next'){\n        returnstr = \"Few second after you go to Next step\";\n      }else if(nextprev==='Prev'){\n        returnstr = \"Few second after you go to Previous step\"\n      }\n      return returnstr;\n    }\n  }\n  useEffect(()=>{\n    nextModalState(true);\n  },[props.nowStage]);\n\n  return(\n    <div>\n      <Modal\n      _modalState={prevModalState}\n      _header={props.stageState[props.nowStage]}\n      closeModal={nextModalState}\n      >\n      {modalMessage('Next')}\n      </Modal>\n\n\n      {props.nowStage === 0 ? (\n        <ControllerTodoInput \n        _stage = {props.nowStage}\n        _contents = {prevTodoList} \n\n        updateContents={nextTodoList}></ControllerTodoInput>\n      ):null}\n      {\n        (props.nowStage === 0) ? (\n          <ControllerReadyTodoList \n            _contents={prevTodoList}\n            // _stage = {this.props._props.stageState[this.state.stage]}\n            _stage = {props.nowStage}ㅁ\n            updateContentsTodoList={nextTodoList}\n          ></ControllerReadyTodoList>\n        ) : (\n          (props.nowStage === 1) ? (\n            <ControllerFilterTodoList \n              _contents={prevTodoList}\n              // _stage = {this.props._props.stageState[this.state.stage]}\n              _stage = {props.nowStage}\n              updateContentsTodoList={nextTodoList}\n          ></ControllerFilterTodoList>\n          ) : (\n            console.log(\"hi\")\n          )\n        )\n\n\n      }\n    </div>\n    \n  );\n\n}\n\n// class AppTodolist extends Component{\n//     constructor(props){\n//       super(props);\n      \n//       this.state={\n//         contents :[[],[],[]],\n//         stage : 0,\n//         modalState : false,\n//         NextPrev : 'Next',\n//         defaultActionState : \"writeMode\"\n//       }\n//     }\n\n//     modalMessage(NextPrev){\n//       let returnstr;\n//       if(NextPrev==='Next'){\n//         returnstr = \"Few second after you go to Next step\";\n//       }else if(NextPrev==='Prev'){\n//         returnstr = \"Few second after you go to Previous step\"\n//       }\n//       return returnstr;\n//     }\n\n//     render(){\n//       return(\n//         <div>\n          \n//           <Modal\n//           _modalState={this.state.modalState}\n//           _header={this.props._props.stageState[this.state.stage]}\n          \n//           closeModal={function(){\n//             this.setState({\n//               modalState : false\n//             })\n//           }.bind(this)}\n//           >\n//             {this.modalMessage(this.state.NextPrev)}\n//           </Modal>\n\n\n//           {this.state.stage === 0 ? (\n//             <ControllerTodoInput \n//             _stage = {this.props._stageState[this.state.stage]}\n//             _contents = {this.state.contents} \n  \n//             updateContents={function(updatelist){\n//               this.setState({\n//                 contents : updatelist,\n//               })\n//             }.bind(this)}></ControllerTodoInput>\n//           ):null}\n//           {\n//             (this.state.stage === 0) ? (\n//               <ControllerReadyTodoList \n//                 _contents={this.state.contents}\n//                 // _stage = {this.props._stageState[this.state.stage]}\n//                 _stage = {this.state.stage}\n//                 updateContentsTodoList={function(updatelist){\n//                   this.setState({\n//                     contents : updatelist\n//                   })\n//                 }.bind(this)}\n//               ></ControllerReadyTodoList>\n//             ) : (\n//               (this.state.stage === 1) ? (\n//                 <ControllerFilterTodoList \n//                   _contents={this.state.contents}\n//                   // _stage = {this.props._stageState[this.state.stage]}\n//                   _stage = {this.state.stage}\n//                   updateContentsTodoList={function(updatelist){\n//                     this.setState({\n//                       contents : updatelist\n//                     })\n//                   }.bind(this)}\n//               ></ControllerFilterTodoList>\n//               ) : (\n//                 console.log(\"hi\")\n//               )\n//             )\n\n\n//           }\n//         </div>\n        \n//       );\n//     }\n//   }\n\n  export default AppTodolist;"]},"metadata":{},"sourceType":"module"}