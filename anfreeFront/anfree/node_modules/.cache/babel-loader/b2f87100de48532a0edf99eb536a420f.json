{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/RenderTodoList.js\";\nimport { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport \"./TodoElement.css\"; // window.addEventListener('keydown',(e)=>{\n// if(e.shiftKey &&  37<=e.keyCode && e.keyCode<=40){\n//     pressShiftCnt = pressShiftCnt+1;\n//     pressArrowDirection = e.key;\n//     console.log(pressShiftCnt , pressArrowDirection);\n// }\n// })\n// mode, contents\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RenderTodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.todoMode = 'writeMode';\n    this.currentSelector = 0;\n    this.state = {\n      pressShiftCnt: 0,\n      pressArrowDirection: '' // currentSelector : 0,\n      // todoMode : 'wirteTodo'\n\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', e => {\n      // console.log(e);\n      if (e.shiftKey && 37 <= e.keyCode && e.keyCode <= 40) {\n        var _pressArrowDirection = e.key;\n\n        if (_pressArrowDirection === 'ArrowDown' && this.currentSelector != 0) {\n          console.log(this.currentSelector);\n          var updateContentsList = Array.from(this.props._contents);\n          var temp = updateContentsList[this.currentSelector];\n          updateContentsList[this.currentSelector] = updateContentsList[this.currentSelector + 1];\n          updateContentsList[this.currentSelector + 1] = temp;\n          this.currentSelector = this.currentSelector + 1;\n          console.log(updateContentsList);\n          this.props.updateContentsTodoList(updateContentsList);\n        }\n      }\n      /*\n          writeMode vs selectorMode \n          selectorMode면 움직이고 있는 중입니다.\n      */\n\n\n      if (37 <= e.keyCode && e.keyCode <= 40) {\n        var _pressArrowDirection = e.key;\n\n        if (_pressArrowDirection === 'ArrowDown') {\n          if (this.todoMode === 'writeMode' && this.props._contents.length !== 0) {\n            this.currentSelector = this.props._contents.length - 1;\n            this.todoMode = 'selectorMode';\n            this.props.modeChange('selectorMode');\n          } else if (this.todoMode === 'selectorMode') {\n            this.currentSelector = this.currentSelector === 0 ? 0 : this.currentSelector - 1;\n          }\n        } else if (_pressArrowDirection === 'ArrowUp') {\n          if (this.todoMode === 'selectorMode') {\n            if (this.currentSelector === this.props._contents.length - 1) {\n              this.todoMode = 'writeMode';\n              this.props.modeChange('selectorMode');\n            } else {\n              this.currentSelector = this.currentSelector === this.props._contents.length - 1 ? this.props._contents.length - 1 : this.currentSelector + 1;\n            }\n          }\n        }\n\n        this.forceUpdate();\n        console.log(this.props._contents);\n      } //end arrow if test\n\n    });\n  }\n\n  makeTodoElementByOrder(selectNumber, mode) {\n    var renderList = [];\n    var renderContainer = this.props._contents;\n    var i = 0;\n\n    if (mode === 'selectorMode') {\n      while (i < renderContainer) {\n        if (i === selectNumber) {\n          renderList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: renderContainer[i].todolist\n          }, renderContainer[i].todolist, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this));\n        } else {\n          renderList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement\",\n            children: renderContainer[i].todolist\n          }, renderContainer[i].todolist, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this));\n        }\n\n        i = i + 1;\n      }\n    } else {\n      //render default -> input todolist\n      while (i < renderContainer) {\n        renderList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoMainElement\",\n          children: renderContainer[i].todolist\n        }, renderContainer[i].todolist, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this));\n        i = i + 1;\n      }\n    }\n\n    return renderList;\n  }\n\n  render() {\n    var renderList = this.makeTodoElementByOrder(this.currentSelector, this.todoMode); // var renderList = [];\n    // var renderContainer = this.props._contents;\n    // var i =renderContainer.length-1;\n    // if(this.props._mode === 'editTodo'){\n    //     while(i>=0){\n    //         if(i === renderContainer.length-1 && this.props._mode === 'editTodo'){\n    //             renderList.push(<div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n    //         }else{\n    //             renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n    //         }\n    //         i=i-1;\n    //     }\n    // }else{\n    //     while(i>=0){\n    //         renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n    //         i=i-1;\n    //     }\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RenderTodoList;","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/RenderTodoList.js"],"names":["render","React","Component","RenderTodoList","constructor","props","todoMode","currentSelector","state","pressShiftCnt","pressArrowDirection","componentDidMount","window","addEventListener","e","shiftKey","keyCode","_pressArrowDirection","key","console","log","updateContentsList","Array","from","_contents","temp","updateContentsTodoList","length","modeChange","forceUpdate","makeTodoElementByOrder","selectNumber","mode","renderList","renderContainer","i","push","todolist"],"mappings":"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","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, {Component} from \"react\";\nimport \"./TodoElement.css\"\n\n\n\n\n// window.addEventListener('keydown',(e)=>{\n// if(e.shiftKey &&  37<=e.keyCode && e.keyCode<=40){\n//     pressShiftCnt = pressShiftCnt+1;\n//     pressArrowDirection = e.key;\n//     console.log(pressShiftCnt , pressArrowDirection);\n// }\n// })\n\n\n\n\n// mode, contents\nclass RenderTodoList extends Component{\n    constructor(props){\n        super(props);\n        this.todoMode = 'writeMode';\n        this.currentSelector = 0;\n        this.state={\n            pressShiftCnt :0,\n            pressArrowDirection : '',\n            // currentSelector : 0,\n            // todoMode : 'wirteTodo'\n        }\n    }\n    \n    componentDidMount() {\n        window.addEventListener('keydown',(e)=>{\n            // console.log(e);\n            if(e.shiftKey && 37<=e.keyCode && e.keyCode<=40){\n                var _pressArrowDirection = e.key;\n                if(_pressArrowDirection === 'ArrowDown' && this.currentSelector!=0){\n                    console.log(this.currentSelector)\n                    var updateContentsList = Array.from(this.props._contents);\n                    var temp = updateContentsList[this.currentSelector];\n                    updateContentsList[this.currentSelector] = updateContentsList[this.currentSelector+1];\n                    updateContentsList[this.currentSelector+1] = temp;\n                    this.currentSelector = this.currentSelector+1;\n                    console.log(updateContentsList);\n                    this.props.updateContentsTodoList(updateContentsList);\n                }\n            }\n            /*\n                writeMode vs selectorMode \n                selectorMode면 움직이고 있는 중입니다.\n            */\n            if(37<=e.keyCode && e.keyCode<=40){\n                var _pressArrowDirection = e.key;\n                if(_pressArrowDirection === 'ArrowDown'){\n                    if(this.todoMode==='writeMode' && this.props._contents.length!==0){\n                        this.currentSelector = this.props._contents.length-1;\n                        this.todoMode = 'selectorMode'\n                        this.props.modeChange('selectorMode')\n                    }else if(this.todoMode === 'selectorMode'){\n                        this.currentSelector = (this.currentSelector === 0)? 0 : this.currentSelector-1;                        \n                    }\n                }else if(_pressArrowDirection === 'ArrowUp'){\n                    if(this.todoMode === 'selectorMode'){\n                        if(this.currentSelector === this.props._contents.length-1){\n                            this.todoMode ='writeMode'\n                            this.props.modeChange('selectorMode')\n                        }else{\n                            this.currentSelector = (this.currentSelector === this.props._contents.length-1)? this.props._contents.length-1 : this.currentSelector+1;\n                        }\n                    }\n                }\n                this.forceUpdate();\n                console.log(this.props._contents);\n            }//end arrow if test\n            \n        })\n    }\n\n\n\n\n    makeTodoElementByOrder(selectNumber, mode){\n        var renderList =[];\n        var renderContainer = this.props._contents;\n        var i = 0;\n        if(mode === 'selectorMode'){\n            while(i<renderContainer){\n                if(i === selectNumber){\n                    renderList.push(<div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n                }else{\n                    renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n                \n                }\n                i=i+1;\n            }\n        }else{\n            //render default -> input todolist\n            while(i<renderContainer){\n                renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n                i=i+1;\n            }\n        }\n        return renderList;\n    }\n\n\n    render(){\n        var renderList = this.makeTodoElementByOrder(this.currentSelector,this.todoMode);\n        // var renderList = [];\n        // var renderContainer = this.props._contents;\n        // var i =renderContainer.length-1;\n        // if(this.props._mode === 'editTodo'){\n        //     while(i>=0){\n        //         if(i === renderContainer.length-1 && this.props._mode === 'editTodo'){\n        //             renderList.push(<div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n        //         }else{\n        //             renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n                \n        //         }\n        //         i=i-1;\n        //     }\n        // }else{\n        //     while(i>=0){\n        //         renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n        //         i=i-1;\n        //     }\n        // }\n        return(\n            <div>\n                {renderList}\n            </div>\n            \n\n        )\n    }\n}\n\nexport default RenderTodoList;"]},"metadata":{},"sourceType":"module"}