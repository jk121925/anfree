{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport RenderTodoMemoDivReady from \"./RenderTodoMemoDivReady\"; // import ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\n// import ControllerTodoInput from \"./ControllerTodoInput.js\";\n// import ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\n\nimport * as funcActionTM from \"./FunctionTodoMemo.js\"; // import Modal from \"./Modal.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppTodolist(props) {\n  _s();\n\n  const {\n    stageState,\n    nowStage\n  } = props;\n  const [prevTodoList, changeTodoList] = useState([[], [], []]);\n  const [listSelector, changeListSelector] = useState(1);\n  const [memoSelector, changeMemoSelector] = useState(-1);\n  const [todoSelector, changeTodoSelector] = useState(-1);\n\n  const ActionTodoMemo = (calListSelector, calTodoSelector, calList) => {\n    changeTodoList(calList);\n    changeListSelector(calListSelector);\n    changeTodoSelector(calTodoSelector);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", e => {\n      //swap\n      let swapSet, moveSet, deleteSet;\n\n      if (e.shiftKey && 37 <= e.keyCode && e.keyCode <= 40) {\n        swapSet = funcActionTM.swapTodoContents(todoSelector, listSelector, e.key, nowStage, prevTodoList);\n        if (swapSet != null) ActionTodoMemo(swapSet[0], swapSet[1], swapSet[2]); // switch(nowStage){\n        //   case 0:\n        //     swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList);\n        //     if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        //   case 1:\n        //     swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList);\n        //     if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        //   case 2:\n        //     swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList);\n        //     if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        // }\n      } //move\n      else if (37 <= e.keyCode && e.keyCode <= 40) {\n        moveSet = funcActionTM.moveTodoContents(todoSelector, listSelector, e.key, nowStage, prevTodoList);\n        if (swapSet != null) ActionTodoMemo(moveSet[0], moveSet[1], moveSet[2]); // //EnterTodo\n        // if(nowStage === 0){\n        // }\n        // //FilterTodo\n        // else if(nowStage === 1){\n        // }\n        // //EraseTodo\n        // else if(nowStage === 2){\n        // }\n      } //Enter memo mode\n      else if (e.key === '/') {} //delete\n      else if (e.shiftKey && e.key === 'Delete') {\n        deleteSet = funcActionTM.deleteTodoContents(listSelector, todoSelector, prevTodoList);\n        if (swapSet != null) ActionTodoMemo(moveSet[0], moveSet[1], moveSet[2]);\n      }\n    });\n  });\n  return (\n    /*#__PURE__*/\n    //조건부 렌더링\n    _jsxDEV(\"div\", {\n      children: nowStage === 0 ? /*#__PURE__*/_jsxDEV(RenderTodoMemoDivReady, {\n        renderTodoList: prevTodoList,\n        ActionMode: \"selectorMode\",\n        todoSelector: todoSelector,\n        writeMode: \"todoList\",\n        memoSelector: memoSelector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this) // <div>\n    //   {props.nowStage === 0 ? (\n    //     <ControllerTodoInput \n    //     _stage = {props.nowStage}\n    //     _contents = {prevTodoList} \n    //     updateContents={nextTodoList}></ControllerTodoInput>\n    //   ):null}\n    //   {\n    //     (props.nowStage === 0) ? (\n    //       <ControllerReadyTodoList \n    //         _contents={prevTodoList}\n    //         _stage = {props.nowStage}\n    //         updateContentsTodoList={nextTodoList}\n    //       ></ControllerReadyTodoList>\n    //     ) : (\n    //       (props.nowStage === 1) ? (\n    //         <ControllerFilterTodoList \n    //           _contents={prevTodoList}\n    //           _stage = {props.nowStage}\n    //           updateContentsTodoList={nextTodoList}\n    //       ></ControllerFilterTodoList>\n    //       ) : (\n    //         console.log(\"hi\")\n    //       )\n    //     )\n    //   }\n    // </div>\n\n  );\n}\n\n_s(AppTodolist, \"boNwRzSu1CBzyKqivNyl8SKRBWI=\");\n\n_c = AppTodolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTodolist\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js"],"names":["React","useEffect","useState","useRef","RenderTodoMemoDivReady","funcActionTM","AppTodolist","props","stageState","nowStage","prevTodoList","changeTodoList","listSelector","changeListSelector","memoSelector","changeMemoSelector","todoSelector","changeTodoSelector","ActionTodoMemo","calListSelector","calTodoSelector","calList","window","addEventListener","e","swapSet","moveSet","deleteSet","shiftKey","keyCode","swapTodoContents","key","moveTodoContents","deleteTodoContents"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from \"react\";\nimport RenderTodoMemoDivReady from \"./RenderTodoMemoDivReady\"\n// import ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\n// import ControllerTodoInput from \"./ControllerTodoInput.js\";\n// import ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\nimport * as funcActionTM from \"./FunctionTodoMemo.js\"\n\n// import Modal from \"./Modal.js\";\n\n\n\n\n\nexport default function AppTodolist(props) {\n  const {stageState,nowStage} = props;\n  const [prevTodoList, changeTodoList] = useState([[],[],[]]);\n  const [listSelector, changeListSelector] = useState(1);\n  const [memoSelector, changeMemoSelector] = useState(-1);\n  const [todoSelector, changeTodoSelector] = useState(-1);\n\n  const ActionTodoMemo =(calListSelector,calTodoSelector,calList)=>{\n    changeTodoList(calList);\n    changeListSelector(calListSelector);\n    changeTodoSelector(calTodoSelector);\n  }\n\n\n\n  useEffect(()=>{\n    window.addEventListener(\"keydown\",(e)=>{\n      //swap\n      let swapSet, moveSet,deleteSet;\n      if(e.shiftKey && 37<=e.keyCode && e.keyCode<=40){\n        swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList);\n        if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        // switch(nowStage){\n        //   case 0:\n        //     swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList);\n        //     if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        //   case 1:\n        //     swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList);\n        //     if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        //   case 2:\n        //     swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList);\n        //     if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        // }\n      }\n\n      //move\n      else if(37<=e.keyCode && e.keyCode<=40){\n        moveSet = funcActionTM.moveTodoContents(todoSelector,listSelector, e.key, nowStage, prevTodoList)\n        if(swapSet !=null) ActionTodoMemo(moveSet[0],moveSet[1],moveSet[2]);\n        // //EnterTodo\n        // if(nowStage === 0){\n\n        // }\n        // //FilterTodo\n        // else if(nowStage === 1){\n\n        // }\n        // //EraseTodo\n        // else if(nowStage === 2){\n\n        // }\n      }\n      //Enter memo mode\n      else if(e.key ==='/'){\n\n      }\n      //delete\n      else if(e.shiftKey && e.key === 'Delete'){\n        deleteSet = funcActionTM.deleteTodoContents(listSelector,todoSelector,prevTodoList);\n        if(swapSet !=null) ActionTodoMemo(moveSet[0],moveSet[1],moveSet[2]);\n      }\n    })\n  })\n\n\n\n\n\n  return(\n    //조건부 렌더링\n    <div>\n      {\n      (nowStage === 0) ? (\n        <RenderTodoMemoDivReady\n          renderTodoList = {prevTodoList}\n          ActionMode = 'selectorMode'\n          todoSelector = {todoSelector}\n          writeMode = 'todoList'\n          memoSelector = {memoSelector}\n        ></RenderTodoMemoDivReady>\n      ) : null}\n\n\n      \n    </div>\n\n\n    // <div>\n    //   {props.nowStage === 0 ? (\n    //     <ControllerTodoInput \n    //     _stage = {props.nowStage}\n    //     _contents = {prevTodoList} \n    //     updateContents={nextTodoList}></ControllerTodoInput>\n    //   ):null}\n    //   {\n    //     (props.nowStage === 0) ? (\n    //       <ControllerReadyTodoList \n    //         _contents={prevTodoList}\n    //         _stage = {props.nowStage}\n    //         updateContentsTodoList={nextTodoList}\n    //       ></ControllerReadyTodoList>\n    //     ) : (\n    //       (props.nowStage === 1) ? (\n    //         <ControllerFilterTodoList \n    //           _contents={prevTodoList}\n    //           _stage = {props.nowStage}\n    //           updateContentsTodoList={nextTodoList}\n    //       ></ControllerFilterTodoList>\n    //       ) : (\n    //         console.log(\"hi\")\n    //       )\n    //     )\n\n\n    //   }\n    // </div>\n    \n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}