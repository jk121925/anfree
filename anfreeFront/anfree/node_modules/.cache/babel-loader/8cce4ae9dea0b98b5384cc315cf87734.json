{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport RenderTodoMemoDivReady from \"./RenderTodoMemoDivReady\"; // import ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\n\nimport ControllerTodoInput from \"./ControllerTodoInput.js\"; // import ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\n\nimport * as funcActionTM from \"./FunctionTodoMemo.js\"; // import Modal from \"./Modal.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppTodolist(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    stageState,\n    nowStage\n  } = props;\n  const [prevTodoList, changeTodoList] = useState([[], [], []]);\n  const [listSelector, changeListSelector] = useState(1);\n  const [memoSelector, changeMemoSelector] = useState(-1);\n  const [todoSelector, changeTodoSelector] = useState(-1); //todoMode \n  // true -> todo\n  // false -> memo\n\n  const [todoMode, changeTodoMode] = useState(true);\n  const ActionTodoMemo = useCallback((calListSelector, calTodoSelector, calList) => {\n    changeTodoList(prevTodoList => calList);\n    changeListSelector(prevTodoList => calListSelector);\n    changeTodoSelector(todoSelector => calTodoSelector);\n  }, [listSelector, todoSelector, prevTodoList]);\n\n  const updateListFromInput = updateTodoList => {\n    changeTodoList(updateTodoList);\n  };\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    useCallback(window.addEventListener(\"keydown\", e => {\n      //swap\n      let swapSet, moveSet, deleteSet;\n\n      if (e.shiftKey && 37 <= e.keyCode && e.keyCode <= 40) {\n        swapSet = funcActionTM.swapTodoContents(todoSelector, listSelector, e, nowStage, prevTodoList);\n        if (swapSet != null) ActionTodoMemo(swapSet[0], swapSet[1], swapSet[2]);\n      } //move\n      else if (37 <= e.keyCode && e.keyCode <= 40) {\n        moveSet = funcActionTM.moveTodoContents(todoSelector, listSelector, e, nowStage, prevTodoList);\n        console.log(\"moveSet : \", moveSet);\n        if (moveSet != null) ActionTodoMemo(moveSet[0], moveSet[1], moveSet[2]);\n      } //Enter memo mode\n      else if (e.key === '/') {} //delete\n      else if (e.shiftKey && e.key === 'Delete') {\n        deleteSet = funcActionTM.deleteTodoContents(listSelector, todoSelector, prevTodoList);\n        if (deleteSet != null) ActionTodoMemo(deleteSet[0], deleteSet[1], deleteSet[2]);\n      }\n    }));\n  }, \"epj4qY15NHsef74wNqHIp5fdZmg=\"), [todoSelector]), \"epj4qY15NHsef74wNqHIp5fdZmg=\");\n\n  return (\n    /*#__PURE__*/\n    //조건부 렌더링\n    _jsxDEV(\"div\", {\n      children: nowStage === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ControllerTodoInput, {\n          nowTodoList: prevTodoList,\n          updateContents: updateListFromInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(RenderTodoMemoDivReady, {\n          listSelector: listSelector,\n          todoSelector: todoSelector,\n          renderTodoList: prevTodoList,\n          memoSelector: memoSelector,\n          todoMode: todoMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this) // <div>\n    //   {props.nowStage === 0 ? (\n    //     <ControllerTodoInput \n    //     _stage = {props.nowStage}\n    //     _contents = {prevTodoList} \n    //     updateContents={nextTodoList}></ControllerTodoInput>\n    //   ):null}\n    //   {\n    //     (props.nowStage === 0) ? (\n    //       <ControllerReadyTodoList \n    //         _contents={prevTodoList}\n    //         _stage = {props.nowStage}\n    //         updateContentsTodoList={nextTodoList}\n    //       ></ControllerReadyTodoList>\n    //     ) : (\n    //       (props.nowStage === 1) ? (\n    //         <ControllerFilterTodoList \n    //           _contents={prevTodoList}\n    //           _stage = {props.nowStage}\n    //           updateContentsTodoList={nextTodoList}\n    //       ></ControllerFilterTodoList>\n    //       ) : (\n    //         console.log(\"hi\")\n    //       )\n    //     )\n    //   }\n    // </div>\n\n  );\n}\n\n_s2(AppTodolist, \"C+1oIsMB7E3AWNEfyYNevHzVl4I=\");\n\n_c = AppTodolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTodolist\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js"],"names":["React","useEffect","useState","useRef","useCallback","RenderTodoMemoDivReady","ControllerTodoInput","funcActionTM","AppTodolist","props","stageState","nowStage","prevTodoList","changeTodoList","listSelector","changeListSelector","memoSelector","changeMemoSelector","todoSelector","changeTodoSelector","todoMode","changeTodoMode","ActionTodoMemo","calListSelector","calTodoSelector","calList","updateListFromInput","updateTodoList","window","addEventListener","e","swapSet","moveSet","deleteSet","shiftKey","keyCode","swapTodoContents","moveTodoContents","console","log","key","deleteTodoContents"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef, useCallback} from \"react\";\nimport RenderTodoMemoDivReady from \"./RenderTodoMemoDivReady\"\n// import ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\n// import ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\nimport * as funcActionTM from \"./FunctionTodoMemo.js\"\n\n// import Modal from \"./Modal.js\";\n\n\n\n\n\nexport default function AppTodolist(props) {\n  const {stageState,nowStage} = props;\n  const [prevTodoList, changeTodoList] = useState([[],[],[]]);\n  const [listSelector, changeListSelector] = useState(1);\n  const [memoSelector, changeMemoSelector] = useState(-1);\n  const [todoSelector, changeTodoSelector] = useState(-1);\n  //todoMode \n  // true -> todo\n  // false -> memo\n  const [todoMode, changeTodoMode] = useState(true);\n  const ActionTodoMemo =useCallback((calListSelector,calTodoSelector,calList)=>{\n    changeTodoList((prevTodoList) =>calList);\n    changeListSelector( (prevTodoList) => calListSelector);\n    changeTodoSelector((todoSelector) =>calTodoSelector);\n  },[listSelector,todoSelector,prevTodoList])\n  \n  const updateListFromInput=(updateTodoList) =>{\n    changeTodoList(updateTodoList)\n  }\n\n\n  useEffect(()=>{\n    useCallback (window.addEventListener(\"keydown\",(e)=>{\n      //swap\n      let swapSet, moveSet,deleteSet;\n      if(e.shiftKey && 37<=e.keyCode && e.keyCode<=40){\n        swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e, nowStage, prevTodoList);\n        if(swapSet !=null) ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n      }\n\n      //move\n      else if(37<=e.keyCode && e.keyCode<=40){\n        moveSet = funcActionTM.moveTodoContents(todoSelector,listSelector, e, nowStage, prevTodoList)\n        console.log(\"moveSet : \", moveSet)\n        if(moveSet !=null) ActionTodoMemo(moveSet[0],moveSet[1],moveSet[2]);\n      }\n      //Enter memo mode\n      else if(e.key ==='/'){\n\n      }\n      //delete\n      else if(e.shiftKey && e.key === 'Delete'){\n        deleteSet = funcActionTM.deleteTodoContents(listSelector,todoSelector,prevTodoList);\n        if(deleteSet !=null) ActionTodoMemo(deleteSet[0],deleteSet[1],deleteSet[2]);\n      }\n    })\n    )\n  },[todoSelector])\n\n\n\n\n  return(\n    //조건부 렌더링\n    <div>\n      {\n      (nowStage === 0) ? (\n        <div>\n        <ControllerTodoInput \n        nowTodoList = {prevTodoList} \n        updateContents={updateListFromInput}\n        ></ControllerTodoInput>\n        \n        <RenderTodoMemoDivReady\n          listSelector = {listSelector}\n          todoSelector = {todoSelector}\n          renderTodoList = {prevTodoList}\n          memoSelector = {memoSelector}\n          todoMode = {todoMode}\n        ></RenderTodoMemoDivReady>\n        </div>\n      ) : null}\n\n\n      \n    </div>\n\n\n    // <div>\n    //   {props.nowStage === 0 ? (\n    //     <ControllerTodoInput \n    //     _stage = {props.nowStage}\n    //     _contents = {prevTodoList} \n    //     updateContents={nextTodoList}></ControllerTodoInput>\n    //   ):null}\n    //   {\n    //     (props.nowStage === 0) ? (\n    //       <ControllerReadyTodoList \n    //         _contents={prevTodoList}\n    //         _stage = {props.nowStage}\n    //         updateContentsTodoList={nextTodoList}\n    //       ></ControllerReadyTodoList>\n    //     ) : (\n    //       (props.nowStage === 1) ? (\n    //         <ControllerFilterTodoList \n    //           _contents={prevTodoList}\n    //           _stage = {props.nowStage}\n    //           updateContentsTodoList={nextTodoList}\n    //       ></ControllerFilterTodoList>\n    //       ) : (\n    //         console.log(\"hi\")\n    //       )\n    //     )\n\n\n    //   }\n    // </div>\n    \n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}