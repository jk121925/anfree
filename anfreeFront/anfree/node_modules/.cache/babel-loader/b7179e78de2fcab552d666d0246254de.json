{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport RenderTodoMemoDivReady from \"./RenderTodoMemoDivReady\"; // import ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\n\nimport ControllerTodoInput from \"./ControllerTodoInput.js\"; // import ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\n\nimport * as funcActionTM from \"./FunctionTodoMemo.js\"; // import Modal from \"./Modal.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppTodolist(props) {\n  _s();\n\n  const {\n    stageState,\n    nowStage\n  } = props;\n  const [prevTodoList, changeTodoList] = useState([[], [], []]);\n  const [listSelector, changeListSelector] = useState(1);\n  const [memoSelector, changeMemoSelector] = useState(-1);\n  const [todoSelector, changeTodoSelector] = useState(-1); //todoMode \n  // true -> todo\n  // false -> memo\n\n  const [todoMode, changeTodoMode] = useState(true);\n  const ActionTodoMemo = useCallback((calListSelector, calTodoSelector, calList) => {\n    changeTodoList(calList);\n    changeListSelector(calListSelector);\n    changeTodoSelector(calTodoSelector);\n  });\n\n  const updateListFromInput = updateTodoList => {\n    changeTodoList(updateTodoList);\n  };\n\n  const keyDownEvent = e => {\n    let swapSet, moveSet, deleteSet;\n    let swapMemoSet, moveMemoSet, deleteMemoSet;\n\n    if (e.shiftKey && 37 <= e.keyCode && e.keyCode <= 40) {\n      if (todoMode) {\n        swapSet = funcActionTM.swapTodoContents(todoSelector, listSelector, e, nowStage, prevTodoList);\n        if (swapSet != null) return ActionTodoMemo(swapSet[0], swapSet[1], swapSet[2]);\n      } else {\n        swapMemoSet = funcActionTM.swapMemoContents(e, listSelector, todoSelector, memoSelector, prevTodoList);\n        if (swapMemoSet != null) return ActionTodoMemo(swapMemoSet[0], swapMemoSet[1], swapMemoSet[2]);\n      }\n    } //move\n    else if (37 <= e.keyCode && e.keyCode <= 40) {\n      if (todoMode) {\n        moveSet = funcActionTM.moveTodoContents(todoSelector, listSelector, e, nowStage, prevTodoList);\n        if (moveSet != null) return ActionTodoMemo(moveSet[0], moveSet[1], moveSet[2]);\n      } else {\n        moveMemoSet = funcActionTM.moveMemoContents(e, listSelector, todoSelector, memoSelector, prevTodoList);\n        if (moveMemoSet != null) changeMemoSelector(moveMemoSet);\n      }\n    } //Enter memo mode\n    else if (e.key === '/') {\n      changeTodoMode(!todoMode);\n    } //delete\n    else if (e.shiftKey && e.key === 'Delete') {\n      if (todoMode) {\n        deleteSet = funcActionTM.deleteTodoContents(listSelector, todoSelector, prevTodoList);\n        if (deleteSet != null) return ActionTodoMemo(deleteSet[0], deleteSet[1], deleteSet[2]);\n      } else {\n        deleteMemoSet = funcActionTM.deleteMemoContents(listSelector, todoSelector, memoSelector, prevTodoList);\n        if (deleteMemoSet != null) return ActionTodoMemo(deleteMemoSet[0], deleteMemoSet[1], deleteMemoSet[2]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keyDownEvent);\n    return () => {\n      window.removeEventListener(\"keydown\", keyDownEvent);\n    };\n  });\n  console.log(todoMode);\n  return (\n    /*#__PURE__*/\n    //조건부 렌더링\n    _jsxDEV(\"div\", {\n      children: nowStage === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ControllerTodoInput, {\n          nowTodoList: prevTodoList,\n          updateContents: updateListFromInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(RenderTodoMemoDivReady, {\n          listSelector: listSelector,\n          todoSelector: todoSelector,\n          renderTodoList: prevTodoList,\n          memoSelector: memoSelector,\n          todoMode: todoMode,\n          memoUpdate: updateListFromInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this) // <div>\n    //   {props.nowStage === 0 ? (\n    //     <ControllerTodoInput \n    //     _stage = {props.nowStage}\n    //     _contents = {prevTodoList} \n    //     updateContents={nextTodoList}></ControllerTodoInput>\n    //   ):null}\n    //   {\n    //     (props.nowStage === 0) ? (\n    //       <ControllerReadyTodoList \n    //         _contents={prevTodoList}\n    //         _stage = {props.nowStage}\n    //         updateContentsTodoList={nextTodoList}\n    //       ></ControllerReadyTodoList>\n    //     ) : (\n    //       (props.nowStage === 1) ? (\n    //         <ControllerFilterTodoList \n    //           _contents={prevTodoList}\n    //           _stage = {props.nowStage}\n    //           updateContentsTodoList={nextTodoList}\n    //       ></ControllerFilterTodoList>\n    //       ) : (\n    //         console.log(\"hi\")\n    //       )\n    //     )\n    //   }\n    // </div>\n\n  );\n}\n\n_s(AppTodolist, \"C+1oIsMB7E3AWNEfyYNevHzVl4I=\");\n\n_c = AppTodolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTodolist\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js"],"names":["React","useEffect","useState","useRef","useCallback","RenderTodoMemoDivReady","ControllerTodoInput","funcActionTM","AppTodolist","props","stageState","nowStage","prevTodoList","changeTodoList","listSelector","changeListSelector","memoSelector","changeMemoSelector","todoSelector","changeTodoSelector","todoMode","changeTodoMode","ActionTodoMemo","calListSelector","calTodoSelector","calList","updateListFromInput","updateTodoList","keyDownEvent","e","swapSet","moveSet","deleteSet","swapMemoSet","moveMemoSet","deleteMemoSet","shiftKey","keyCode","swapTodoContents","swapMemoContents","moveTodoContents","moveMemoContents","key","deleteTodoContents","deleteMemoContents","window","addEventListener","removeEventListener","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef, useCallback} from \"react\";\nimport RenderTodoMemoDivReady from \"./RenderTodoMemoDivReady\"\n// import ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\n// import ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\nimport * as funcActionTM from \"./FunctionTodoMemo.js\"\n\n// import Modal from \"./Modal.js\";\n\n\n\n\n\nexport default function AppTodolist(props) {\n  const {stageState,nowStage} = props;\n  const [prevTodoList, changeTodoList] = useState([[],[],[]]);\n  const [listSelector, changeListSelector] = useState(1);\n  const [memoSelector, changeMemoSelector] = useState(-1);\n  const [todoSelector, changeTodoSelector] = useState(-1);\n  //todoMode \n  // true -> todo\n  // false -> memo\n  const [todoMode, changeTodoMode] = useState(true);\n  const ActionTodoMemo =useCallback((calListSelector,calTodoSelector,calList)=>{\n    changeTodoList(calList);\n    changeListSelector(calListSelector);\n    changeTodoSelector(calTodoSelector);\n  })\n  \n  const updateListFromInput=(updateTodoList) =>{\n    changeTodoList(updateTodoList)\n  }\n\n\n  const keyDownEvent =(e)=>{\n    let swapSet, moveSet,deleteSet;\n    let swapMemoSet, moveMemoSet, deleteMemoSet;\n\n      if(e.shiftKey && 37<=e.keyCode && e.keyCode<=40){\n        if(todoMode){\n          swapSet = funcActionTM.swapTodoContents(todoSelector,listSelector, e, nowStage, prevTodoList);\n          if(swapSet !=null) return ActionTodoMemo(swapSet[0],swapSet[1],swapSet[2]);\n        }else{\n          swapMemoSet = funcActionTM.swapMemoContents(e,listSelector,todoSelector,memoSelector,prevTodoList)\n          if(swapMemoSet !=null) return ActionTodoMemo(swapMemoSet[0],swapMemoSet[1],swapMemoSet[2]);\n        }\n      }\n      //move\n      else if(37<=e.keyCode && e.keyCode<=40){\n        if(todoMode){\n          moveSet = funcActionTM.moveTodoContents(todoSelector,listSelector, e, nowStage, prevTodoList)\n          if(moveSet !=null) return ActionTodoMemo(moveSet[0],moveSet[1],moveSet[2]);  \n        }else{\n          moveMemoSet = funcActionTM.moveMemoContents(e, listSelector, todoSelector,memoSelector,prevTodoList)\n          if(moveMemoSet!=null) changeMemoSelector(moveMemoSet);\n        }\n      }\n      //Enter memo mode\n      else if(e.key ==='/'){\n        changeTodoMode(!todoMode);\n      }\n      //delete\n      else if(e.shiftKey && e.key === 'Delete'){\n        if(todoMode){\n          deleteSet = funcActionTM.deleteTodoContents(listSelector,todoSelector,prevTodoList);\n          if(deleteSet !=null)return ActionTodoMemo(deleteSet[0],deleteSet[1],deleteSet[2]);  \n        }else{\n          deleteMemoSet = funcActionTM.deleteMemoContents(listSelector,todoSelector,memoSelector,prevTodoList);\n          if(deleteMemoSet!=null) return ActionTodoMemo(deleteMemoSet[0],deleteMemoSet[1],deleteMemoSet[2])\n        }\n      }\n\n  }\n\n\n  useEffect(()=>{\n    window.addEventListener(\"keydown\",keyDownEvent);\n    return() =>{\n      window.removeEventListener(\"keydown\",keyDownEvent);\n    }\n  })\n\n\n\n  console.log(todoMode)\n  return(\n    //조건부 렌더링\n    <div>\n      {\n      (nowStage === 0) ? (\n        <div>\n        <ControllerTodoInput \n        nowTodoList = {prevTodoList} \n        updateContents={updateListFromInput}\n        ></ControllerTodoInput>\n        \n        <RenderTodoMemoDivReady\n          listSelector = {listSelector}\n          todoSelector = {todoSelector}\n          renderTodoList = {prevTodoList}\n          memoSelector = {memoSelector}\n          todoMode = {todoMode}\n          memoUpdate = {updateListFromInput}\n        ></RenderTodoMemoDivReady>\n        </div>\n      ) : null}\n\n\n      \n    </div>\n\n\n    // <div>\n    //   {props.nowStage === 0 ? (\n    //     <ControllerTodoInput \n    //     _stage = {props.nowStage}\n    //     _contents = {prevTodoList} \n    //     updateContents={nextTodoList}></ControllerTodoInput>\n    //   ):null}\n    //   {\n    //     (props.nowStage === 0) ? (\n    //       <ControllerReadyTodoList \n    //         _contents={prevTodoList}\n    //         _stage = {props.nowStage}\n    //         updateContentsTodoList={nextTodoList}\n    //       ></ControllerReadyTodoList>\n    //     ) : (\n    //       (props.nowStage === 1) ? (\n    //         <ControllerFilterTodoList \n    //           _contents={prevTodoList}\n    //           _stage = {props.nowStage}\n    //           updateContentsTodoList={nextTodoList}\n    //       ></ControllerFilterTodoList>\n    //       ) : (\n    //         console.log(\"hi\")\n    //       )\n    //     )\n\n\n    //   }\n    // </div>\n    \n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}