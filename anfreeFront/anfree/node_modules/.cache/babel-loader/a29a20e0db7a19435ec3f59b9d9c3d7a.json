{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/Todolist.js\";\nimport React, { Component } from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\";\nimport RenderTodoInput from \"./RenderTodoInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todolist extends Component {\n  constructor(props) {\n    super(props);\n    this.contentsMaxIdx = 0;\n    this.state = {\n      contents: [],\n      currentSelector: 0\n    };\n  }\n\n  render() {\n    console.log(this.contentsMaxIdx);\n    console.log(this.state.currentSelector);\n    console.log(this.state.contents[this.contentsMaxIdx - 1]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RenderTodoInput, {\n        _contents: this.state.contents,\n        _contentsMaxIdx: this.contentsMaxIdx,\n        selecterControl: function (selectedIdx) {\n          console.log(selectedIdx);\n        }.bind(this),\n        updateContents: function (updatelist) {\n          this.contentsMaxIdx = this.contentsMaxIdx + 1;\n          this.setState({\n            contents: updatelist,\n            currentSelector: this.contentsMaxIdx\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RenderTodoList, {\n        contentsData: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Todolist;","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/Todolist.js"],"names":["React","Component","RenderTodoList","RenderTodoInput","Todolist","constructor","props","contentsMaxIdx","state","contents","currentSelector","render","console","log","selectedIdx","bind","updatelist","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;;AACA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAqB,CAArB;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,eAAe,EAAG;AAFT,KAAX;AAID;;AAIDC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,cAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,eAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,QAAX,CAAoB,KAAKF,cAAL,GAAoB,CAAxC,CAAZ;AACA,wBACE;AAAA,8BACE,QAAC,eAAD;AACA,QAAA,SAAS,EAAI,KAAKC,KAAL,CAAWC,QADxB;AAEA,QAAA,eAAe,EAAI,KAAKF,cAFxB;AAGA,QAAA,eAAe,EAAI,UAASO,WAAT,EAAqB;AACtCF,UAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD,SAFkB,CAEjBC,IAFiB,CAEZ,IAFY,CAHnB;AAMA,QAAA,cAAc,EAAE,UAASC,UAAT,EAAoB;AAClC,eAAKT,cAAL,GAAsB,KAAKA,cAAL,GAAoB,CAA1C;AACA,eAAKU,QAAL,CAAc;AACZR,YAAAA,QAAQ,EAAGO,UADC;AAEZN,YAAAA,eAAe,EAAG,KAAKH;AAFX,WAAd;AAID,SANe,CAMdQ,IANc,CAMT,IANS;AANhB;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,cAAD;AAAgB,QAAA,YAAY,EAAE,KAAKP,KAAL,CAAWC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AApC2B;;AAuC9B,eAAeL,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\"\nimport RenderTodoInput from \"./RenderTodoInput.js\";\nclass Todolist extends Component{\n    constructor(props){\n      super(props);\n      this.contentsMaxIdx =0;\n      \n      this.state={\n        contents :[],\n        currentSelector : 0\n      }\n    }\n    \n\n\n    render(){\n      console.log(this.contentsMaxIdx);\n      console.log(this.state.currentSelector);\n      console.log(this.state.contents[this.contentsMaxIdx-1]);\n      return(\n        <div>\n          <RenderTodoInput \n          _contents = {this.state.contents} \n          _contentsMaxIdx = {this.contentsMaxIdx}\n          selecterControl = {function(selectedIdx){\n            console.log(selectedIdx);\n          }.bind(this)}\n          updateContents={function(updatelist){\n            this.contentsMaxIdx = this.contentsMaxIdx+1;\n            this.setState({\n              contents : updatelist,\n              currentSelector : this.contentsMaxIdx\n            })\n          }.bind(this)}></RenderTodoInput>\n          <RenderTodoList contentsData={this.state.contents}></RenderTodoList>\n        </div>\n        \n      );\n    }\n  }\n\n  export default Todolist;"]},"metadata":{},"sourceType":"module"}