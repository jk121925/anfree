{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\";\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\";\nimport Modal from \"./Modal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppTodolist(props) {\n  _s();\n\n  const [prevTodoList, nextTodoList] = useState([[], [], []]);\n  const [prevModalState, nextModalState] = useState(false);\n\n  const closeModal = () => {\n    nextModalState(false);\n  }; // const modalMessage = (nextprev)=>{\n  //   if(nextprev == 'Next'){\n  //     let returnstr;\n  //     if(nextprev==='Next'){\n  //       returnstr = \"Few second after you go to Next step\";\n  //     }else if(nextprev==='Prev'){\n  //       returnstr = \"Few second after you go to Previous step\"\n  //     }\n  //     return returnstr;\n  //   }\n  // }\n  //Modal logic\n  // const isInitialMount = useRef(false);\n  // useEffect(() => {\n  //   if (!isInitialMount.current) {\n  //     isInitialMount.current = true;\n  //   } else {\n  //     nextModalState(true);  \n  //   }\n  // },[props.nowStage]);\n\n\n  return (\n    /*#__PURE__*/\n    //   <Modal\n    //   _modalState={prevModalState}\n    //   _header={props.stageState[props.nowStage]}\n    //   closeModal={closeModal}\n    //   >\n    //   {modalMessage('Next')}\n    //   </Modal>\n    _jsxDEV(\"div\", {\n      children: [props.nowStage === 0 ? /*#__PURE__*/_jsxDEV(ControllerTodoInput, {\n        _stage: props.nowStage,\n        _contents: prevTodoList,\n        updateContents: nextTodoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this) : null, props.nowStage === 0 ? /*#__PURE__*/_jsxDEV(ControllerReadyTodoList, {\n        _contents: prevTodoList,\n        _stage: props.nowStage,\n        updateContentsTodoList: nextTodoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : props.nowStage === 1 ? /*#__PURE__*/_jsxDEV(ControllerFilterTodoList, {\n        _contents: prevTodoList,\n        _stage: props.nowStage,\n        updateContentsTodoList: nextTodoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : console.log(\"hi\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(AppTodolist, \"1DmGIEAdZwhzfA1ZrvGof6Ad4hs=\");\n\n_c = AppTodolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTodolist\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js"],"names":["React","useEffect","useState","useRef","ControllerReadyTodoList","ControllerTodoInput","ControllerFilterTodoList","Modal","AppTodolist","props","prevTodoList","nextTodoList","prevModalState","nextModalState","closeModal","nowStage","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,uBAAP,MAAoC,8BAApC;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BT,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAD,CAA7C;AACA,QAAM,CAACU,cAAD,EAAiBC,cAAjB,IAAmCX,QAAQ,CAAC,KAAD,CAAjD;;AACA,QAAMY,UAAU,GAAG,MAAK;AAACD,IAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,GAA/C,CAHyC,CAKzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AAAA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA,iBACGJ,KAAK,CAACM,QAAN,KAAmB,CAAnB,gBACC,QAAC,mBAAD;AACA,QAAA,MAAM,EAAIN,KAAK,CAACM,QADhB;AAEA,QAAA,SAAS,EAAIL,YAFb;AAIA,QAAA,cAAc,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA,cADD,GAMC,IAPJ,EASKF,KAAK,CAACM,QAAN,KAAmB,CAApB,gBACE,QAAC,uBAAD;AACE,QAAA,SAAS,EAAEL,YADb;AAEE,QAAA,MAAM,EAAID,KAAK,CAACM,QAFlB;AAGE,QAAA,sBAAsB,EAAEJ;AAH1B;AAAA;AAAA;AAAA;AAAA,cADF,GAOGF,KAAK,CAACM,QAAN,KAAmB,CAApB,gBACE,QAAC,wBAAD;AACE,QAAA,SAAS,EAAEL,YADb;AAEE,QAAA,MAAM,EAAID,KAAK,CAACM,QAFlB;AAGE,QAAA,sBAAsB,EAAEJ;AAH1B;AAAA;AAAA;AAAA;AAAA,cADF,GAOEK,OAAO,CAACC,GAAR,CAAY,IAAZ,CAvBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AA2CD;;GA1EuBT,W;;KAAAA,W","sourcesContent":["import React, {useEffect, useState, useRef} from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\nimport Modal from \"./Modal.js\";\n\nexport default function AppTodolist(props) {\n  const [prevTodoList, nextTodoList] = useState([[],[],[]]);\n  const [prevModalState, nextModalState] = useState(false);\n  const closeModal = () =>{nextModalState(false)};\n\n  // const modalMessage = (nextprev)=>{\n  //   if(nextprev == 'Next'){\n  //     let returnstr;\n  //     if(nextprev==='Next'){\n  //       returnstr = \"Few second after you go to Next step\";\n  //     }else if(nextprev==='Prev'){\n  //       returnstr = \"Few second after you go to Previous step\"\n  //     }\n  //     return returnstr;\n  //   }\n  // }\n\n  //Modal logic\n  // const isInitialMount = useRef(false);\n  // useEffect(() => {\n  //   if (!isInitialMount.current) {\n  //     isInitialMount.current = true;\n  //   } else {\n  //     nextModalState(true);  \n  //   }\n  // },[props.nowStage]);\n\n\n\n\n\n  return(\n   \n    //   <Modal\n    //   _modalState={prevModalState}\n    //   _header={props.stageState[props.nowStage]}\n    //   closeModal={closeModal}\n    //   >\n    //   {modalMessage('Next')}\n    //   </Modal>\n\n    <div>\n      {props.nowStage === 0 ? (\n        <ControllerTodoInput \n        _stage = {props.nowStage}\n        _contents = {prevTodoList} \n\n        updateContents={nextTodoList}></ControllerTodoInput>\n      ):null}\n      {\n        (props.nowStage === 0) ? (\n          <ControllerReadyTodoList \n            _contents={prevTodoList}\n            _stage = {props.nowStage}\n            updateContentsTodoList={nextTodoList}\n          ></ControllerReadyTodoList>\n        ) : (\n          (props.nowStage === 1) ? (\n            <ControllerFilterTodoList \n              _contents={prevTodoList}\n              _stage = {props.nowStage}\n              updateContentsTodoList={nextTodoList}\n          ></ControllerFilterTodoList>\n          ) : (\n            console.log(\"hi\")\n          )\n        )\n\n\n      }\n    </div>\n    \n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}