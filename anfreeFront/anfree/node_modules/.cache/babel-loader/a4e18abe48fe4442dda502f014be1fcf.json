{"ast":null,"code":"//swap, delete은 list를 같이 반환\n//그냥 move는 todoSelector와 listSelector를 반환\nexport const swapUpAndDown = (todoSelector, listSelector, pressedKey, todoList) => {\n  let swapTodoList = Array.from(todoList);\n  let NextTodoSelector = pressedKey.key === 'ArrowUp' ? todoSelector - 1 : todoSelector + 1; //넘어가는지 확인 해줘야 한다.\n\n  if (NextTodoSelector < 0 || NextTodoSelector > todoList[listSelector].length - 1) {\n    return null;\n  }\n\n  let temp = swapTodoList[listSelector][todoSelector] = swapTodoList[listSelector][todoSelector];\n  swapTodoList[listSelector][todoSelector] = swapTodoList[listSelector][NextTodoSelector];\n  swapTodoList[listSelector][NextTodoSelector] = temp;\n  return [listSelector, NextTodoSelector, swapTodoList];\n}; //state변경까지해야한다.\n//check는 큰 function에서 진행\n\nexport const swapRightAndLeft = (todoSelector, listSelector, pressedKey, todoList) => {\n  let swapTodoList = Array.from(todoList);\n  let nextTodoSelector = 0;\n  let nextListSelctor;\n\n  if (pressedKey.key === 'ArrowRight') {\n    nextListSelctor = listSelector != 2 ? nextListSelctor + 1 : nextListSelctor;\n  } else if (pressedKey.key === 'ArrowLeft') {\n    nextListSelctor = listSelector != 0 ? nextListSelctor - 1 : nextListSelctor;\n  } //상태 재설정\n\n\n  swapTodoList[listSelector][todoSelector].todoState = nextListSelctor === 0 ? 'WILLNOTDO' : nextListSelctor === 1 ? 'READY' : \"WILLDO\"; //타겟 todo에 추가\n\n  swapTodoList[nextListSelctor].push(swapTodoList[listSelector][todoSelector]); //원본 제거\n\n  deleteTodoContents(listSelector, todoSelector, swapTodoList); //변경된 위치의 todoSelector 재설정\n\n  nextTodoSelector = swapTodoList[nextListSelctor].length - 1;\n  return [nextListSelctor, nextTodoSelector, swapTodoList];\n};\n/*\nTodoList 위아리 바꾸기\nUpDonw : 위인지 아래인지\ntargetList : 지우고자 하는 list => 0,1,2\ncurrentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\nupdateFunction : 함수에서 callback 하는 구조 => property에서 받아온 값\npropsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n*/\n\nexport const swapTodoContents = (todoSelector, listSelector, pressedKey, nowStage, todoList) => {\n  if (nowStage === 0) {\n    if (pressedKey.key === 'ArrowUp' || pressedKey.key === 'ArrowDown') {\n      return swapUpAndDown(todoSelector, listSelector, pressedKey, todoList);\n    }\n\n    return null;\n  } else if (nowStage === 1) {\n    if (pressedKey.key === 'ArrowUp' || pressedKey.key === 'ArrowDown') {\n      return swapUpAndDown(todoSelector, listSelector, pressedKey, todoList);\n    } else if (pressedKey.key === 'ArrowRight' && nowStage + 1 <= 2 || pressedKey.key === 'ArrowLeft' && nowStage - 1 >= 0) {\n      return swapRightAndLeft(todoSelector, listSelector, pressedKey, todoList);\n    }\n  } else if (nowStage === 2) {\n    if (pressedKey.key === 'ArrowUp' || pressedKey.key === 'ArrowDown') {\n      return swapUpAndDown(todoSelector, listSelector, pressedKey, todoList);\n    }\n\n    return null;\n  }\n};\n/*\nMemo 위아래 바꾸기\nUpDonw : 위인지 아래인지\ntargetList : 지우고자 하는 list => 0,1,2\ncurrentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\ncurrentMemoSelector : 현재 선택된 메모 번호\nupdateFunction : 함수에서 callback 하는 구조 => property에서 받아온 값\npropsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n*/\n\nexport const swapMemoContents = (UpDown, listSelector, todoSelector, memoSelector, todoList) => {\n  let memoIdx = memoSelector;\n  let todoIdx = todoSelector;\n  var upDownInt = UpDown === 'up' ? -1 : 1;\n  var updateContentsList = Array.from(todoList);\n  var temp = updateContentsList[listSelector][todoIdx].memolist[todoList];\n  updateContentsList[listSelector][todoIdx].memolist[memoIdx] = updateContentsList[listSelector][todoIdx].memolist[memoIdx + upDownInt];\n  updateContentsList[listSelector][todoIdx].memolist[memoIdx + upDownInt] = temp; // updateFunction(updateContentsList);\n\n  return updateContentsList;\n};\n/*\nMemoList 삭제\ntargetList : 지우고자 하는 list => 0,1,2\ncurrentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\ncurrentMemoSelector : 현재 선택된 메모 번호\npropsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n*/\n\nexport const deleteMemoContents = (listSelector, todoSelector, memoSelector, todoList) => {\n  let deleteTodoList = Array.from(todoList);\n  let memolength = deleteTodoList[listSelector][todoSelector].memolist.length;\n\n  for (var i = memoSelector; i < deleteTodoList[listSelector][todoSelector].length - 1; i++) {\n    deleteTodoList[listSelector][todoSelector].memolist[i] = deleteTodoList[listSelector][todoSelector].memolist[i + 1];\n  }\n\n  deleteTodoList[listSelector][todoSelector].memolist = deleteTodoList[listSelector][todoSelector].memolist.slice(0, memolength - 1);\n  return [listSelector, todoSelector, deleteTodoList];\n}; // 함수에는 해당되는 기능만을 집중해서 구현하자 -> 함수는 필요한 것만!\n\n/*\nTodoList 삭제\ntargetList : 지우고자 하는 list => 0,1,2\ncurrentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\npropsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n*/\n\nexport const deleteTodoContents = (listSelector, todoSelector, todoList) => {\n  let deleteTodoList = Array.from(todoList);\n  let nextTodoSelector = todoSelector == deleteTodoList[listSelector].length - 1 ? todoSelector - 1 : todoSelector;\n\n  for (var i = todoSelector; i < deleteTodoList[listSelector].length - 1; i++) {\n    deleteTodoList[listSelector][i] = deleteTodoList[listSelector][i + 1];\n  }\n\n  deleteTodoList = deleteTodoList[listSelector].slice(0, todoList[listSelector].length - 1);\n  return [listSelector, nextTodoSelector, deleteTodoList];\n};\nexport const moveUpAndDown = (todoSelector, listSelector, pressedKey, todoList) => {\n  let nextTodoSelector;\n\n  if (pressedKey.key === 'ArrowUP') {\n    nextTodoSelector = todoSelector != 0 ? todoSelector - 1 : todoSelector;\n  } else {\n    nextTodoSelector = todoSelector != todoList[listSelector].length - 1 ? todoSelector + 1 : todoSelector;\n  }\n\n  console.log(\"     moveUpAndDown\", nextTodoSelector);\n  return [listSelector, nextTodoSelector, todoList];\n}; //return next TodoSelector from pressedKey\n//return [listSelector, todoSelector]\n\nexport const moveTodoContents = (todoSelector, listSelector, pressedKey, nowStage, todoList) => {\n  console.log(\"moveTodoContents :\", todoSelector, listSelector, pressedKey, nowStage, todoList);\n\n  if (nowStage == 0) {\n    if (pressedKey.key === 'ArrowUP' || pressedKey.key === 'ArrowDown') {\n      return moveUpAndDown(todoSelector, listSelector, pressedKey, todoList);\n    }\n  } else if (nowStage === 1) {\n    if (pressedKey.key === 'ArrowUP' || pressedKey.key === 'ArrowDown') {\n      return moveUpAndDown(todoSelector, listSelector, pressedKey, todoList);\n    } else if (pressedKey.key == 'ArrowRight' || pressedKey.key == 'ArrowLeft') {\n      let nextTodoSelector = 0;\n      let nextListSelctor;\n\n      if (pressedKey.key === 'ArrowRight') {\n        nextListSelctor = listSelector != 2 ? nextListSelctor + 1 : nextListSelctor;\n      } else if (pressedKey.key === 'ArrowLeft') {\n        nextListSelctor = listSelector != 0 ? nextListSelctor - 1 : nextListSelctor;\n      }\n\n      return [nextListSelctor, nextTodoSelector];\n    }\n  } else if (nowStage === 2) {\n    if (pressedKey.key === 'ArrowUP' || pressedKey.key === 'ArrowDown') {\n      return moveUpAndDown(todoSelector, listSelector, pressedKey, todoList);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/FunctionTodoMemo.js"],"names":["swapUpAndDown","todoSelector","listSelector","pressedKey","todoList","swapTodoList","Array","from","NextTodoSelector","key","length","temp","swapRightAndLeft","nextTodoSelector","nextListSelctor","todoState","push","deleteTodoContents","swapTodoContents","nowStage","swapMemoContents","UpDown","memoSelector","memoIdx","todoIdx","upDownInt","updateContentsList","memolist","deleteMemoContents","deleteTodoList","memolength","i","slice","moveUpAndDown","console","log","moveTodoContents"],"mappings":"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","sourcesContent":["    \n\n    //swap, delete은 list를 같이 반환\n    //그냥 move는 todoSelector와 listSelector를 반환\n    export const swapUpAndDown =(todoSelector,listSelector,pressedKey,todoList)=>{\n        let swapTodoList = Array.from(todoList);\n        let NextTodoSelector = (pressedKey.key ==='ArrowUp')? todoSelector-1: todoSelector +1;\n        //넘어가는지 확인 해줘야 한다.\n        if(NextTodoSelector <0 || NextTodoSelector >todoList[listSelector].length-1){\n            return null;\n        } \n        let temp = swapTodoList[listSelector][todoSelector] = swapTodoList[listSelector][todoSelector];\n        swapTodoList[listSelector][todoSelector] = swapTodoList[listSelector][NextTodoSelector];\n        swapTodoList[listSelector][NextTodoSelector] = temp;\n        return [listSelector,NextTodoSelector, swapTodoList];\n    }\n\n    //state변경까지해야한다.\n    //check는 큰 function에서 진행\n    export const swapRightAndLeft = (todoSelector,listSelector,pressedKey,todoList)=>{\n        let swapTodoList = Array.from(todoList);\n        let nextTodoSelector = 0 ; let nextListSelctor;\n        if(pressedKey.key === 'ArrowRight'){\n            nextListSelctor = (listSelector !=2)? nextListSelctor+1 : nextListSelctor;\n        }else if(pressedKey.key === 'ArrowLeft'){\n            nextListSelctor = (listSelector !=0)? nextListSelctor-1 : nextListSelctor;\n        } \n        //상태 재설정\n        swapTodoList[listSelector][todoSelector].todoState = (nextListSelctor === 0) ? 'WILLNOTDO': (nextListSelctor ===1) ? 'READY' : \"WILLDO\";\n        //타겟 todo에 추가\n        swapTodoList[nextListSelctor].push(swapTodoList[listSelector][todoSelector]);\n        //원본 제거\n        deleteTodoContents(listSelector,todoSelector,swapTodoList);\n        //변경된 위치의 todoSelector 재설정\n        nextTodoSelector = swapTodoList[nextListSelctor].length-1;\n        return [nextListSelctor,nextTodoSelector,swapTodoList];   \n    }\n    /*\n    TodoList 위아리 바꾸기\n    UpDonw : 위인지 아래인지\n    targetList : 지우고자 하는 list => 0,1,2\n    currentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\n    updateFunction : 함수에서 callback 하는 구조 => property에서 받아온 값\n    propsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n    */\n    export const swapTodoContents =(todoSelector,listSelector, pressedKey, nowStage, todoList)=>{\n        if(nowStage ===0){\n            if(pressedKey.key === 'ArrowUp' || pressedKey.key ==='ArrowDown'){\n                return swapUpAndDown(todoSelector,listSelector,pressedKey,todoList);\n            }\n            return null;\n        }\n        else if(nowStage ===1){\n            if(pressedKey.key === 'ArrowUp' || pressedKey.key ==='ArrowDown'){\n                return swapUpAndDown(todoSelector,listSelector,pressedKey,todoList);\n            }\n            else if(pressedKey.key === 'ArrowRight' && nowStage+1 <=2 || pressedKey.key === 'ArrowLeft' && nowStage-1 >=0){\n                return swapRightAndLeft(todoSelector,listSelector,pressedKey,todoList)\n            }\n        }\n        else if(nowStage ===2){\n            if(pressedKey.key === 'ArrowUp' || pressedKey.key ==='ArrowDown'){\n                return swapUpAndDown(todoSelector,listSelector,pressedKey,todoList);\n            }\n            return null;\n        }\n    }\n\n    /*\n    Memo 위아래 바꾸기\n    UpDonw : 위인지 아래인지\n    targetList : 지우고자 하는 list => 0,1,2\n    currentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\n    currentMemoSelector : 현재 선택된 메모 번호\n    updateFunction : 함수에서 callback 하는 구조 => property에서 받아온 값\n    propsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n    */\n    export const swapMemoContents = (UpDown,listSelector,todoSelector,memoSelector,todoList)=>{\n        let memoIdx = memoSelector;\n        let todoIdx = todoSelector;\n        var upDownInt = (UpDown === 'up')? -1 :1;\n        var updateContentsList = Array.from(todoList);\n        var temp = updateContentsList[listSelector][todoIdx].memolist[todoList];\n        updateContentsList[listSelector][todoIdx].memolist[memoIdx] = updateContentsList[listSelector][todoIdx].memolist[memoIdx + upDownInt];\n        updateContentsList[listSelector][todoIdx].memolist[memoIdx+upDownInt] = temp;\n        // updateFunction(updateContentsList);\n        return updateContentsList;\n    }\n\n    /*\n    MemoList 삭제\n    targetList : 지우고자 하는 list => 0,1,2\n    currentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\n    currentMemoSelector : 현재 선택된 메모 번호\n    propsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n    */\n    export const deleteMemoContents =(listSelector,todoSelector,memoSelector,todoList)=>{\n        let deleteTodoList = Array.from(todoList);\n        let memolength = deleteTodoList[listSelector][todoSelector].memolist.length;\n        for(var i = memoSelector; i<deleteTodoList[listSelector][todoSelector].length-1; i++){\n            deleteTodoList[listSelector][todoSelector].memolist[i] = \n            deleteTodoList[listSelector][todoSelector].memolist[i+1]\n        }\n        deleteTodoList[listSelector][todoSelector].memolist=\n        deleteTodoList[listSelector][todoSelector].memolist.slice(0,memolength-1);\n        return [listSelector,todoSelector, deleteTodoList];\n    }\n\n    // 함수에는 해당되는 기능만을 집중해서 구현하자 -> 함수는 필요한 것만!\n    /*\n    TodoList 삭제\n    targetList : 지우고자 하는 list => 0,1,2\n    currentTodoSelector : 현재 선택된 번호 => 몇번째가 선택 되었는지\n    propsContents : property로 부터 받아온 [[],[],[]] 리스트 전체\n    */\n    export const deleteTodoContents=(listSelector,todoSelector,todoList)=>{\n        let deleteTodoList = Array.from(todoList);\n        let nextTodoSelector = (todoSelector == deleteTodoList[listSelector].length-1)? todoSelector-1 : todoSelector;\n        for(var i=todoSelector; i<deleteTodoList[listSelector].length-1; i++){\n            deleteTodoList[listSelector][i] = deleteTodoList[listSelector][i+1];\n        }\n        deleteTodoList = deleteTodoList[listSelector].slice(0,todoList[listSelector].length-1);\n        return [listSelector,nextTodoSelector, deleteTodoList];\n    }\n\n\n    export const moveUpAndDown = (todoSelector,listSelector,pressedKey,todoList)=>{\n        let nextTodoSelector;\n        if(pressedKey.key === 'ArrowUP'){\n            nextTodoSelector = (todoSelector !=0) ? todoSelector-1 : todoSelector;\n        }\n        else{\n            nextTodoSelector = (todoSelector !=todoList[listSelector].length-1)? todoSelector+1 : todoSelector;\n        }\n        console.log(\"     moveUpAndDown\", nextTodoSelector)\n        return [listSelector,nextTodoSelector,todoList]\n    }\n\n\n\n    //return next TodoSelector from pressedKey\n    //return [listSelector, todoSelector]\n    export const moveTodoContents = (todoSelector,listSelector, pressedKey, nowStage, todoList)=>{\n        console.log(\"moveTodoContents :\", todoSelector,listSelector, pressedKey, nowStage, todoList)\n        if(nowStage == 0){\n            if(pressedKey.key === 'ArrowUP' || pressedKey.key === 'ArrowDown'){\n                return moveUpAndDown(todoSelector,listSelector,pressedKey,todoList);\n            }\n            \n        }\n        else if(nowStage === 1){\n            if(pressedKey.key === 'ArrowUP' || pressedKey.key ==='ArrowDown'){\n                return moveUpAndDown(todoSelector,listSelector,pressedKey,todoList);\n            }else if(pressedKey.key =='ArrowRight' || pressedKey.key == 'ArrowLeft'){\n                let nextTodoSelector = 0 ; let nextListSelctor;\n                if(pressedKey.key === 'ArrowRight'){\n                    nextListSelctor = (listSelector !=2)? nextListSelctor+1 : nextListSelctor;\n                }else if(pressedKey.key === 'ArrowLeft'){\n                    nextListSelctor = (listSelector !=0)? nextListSelctor-1 : nextListSelctor;\n                }\n                return [nextListSelctor, nextTodoSelector]\n            }\n        }\n        else if(nowStage === 2){\n            if(pressedKey.key === 'ArrowUP' || pressedKey.key === 'ArrowDown'){\n                return moveUpAndDown(todoSelector,listSelector,pressedKey,todoList);\n            }\n        }\n    }"]},"metadata":{},"sourceType":"module"}