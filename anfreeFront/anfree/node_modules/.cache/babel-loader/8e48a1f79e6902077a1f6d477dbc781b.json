{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoMemoDiv(_ref) {\n  _s();\n\n  let {\n    _contents,\n    _mode,\n    _currentSelector,\n    _writeContentMode\n  } = _ref;\n  const [preContents, AfterContents] = useState(_contents);\n  var returnList = [];\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  };\n\n  const makeMemoDivList = memoListByContent => {\n    return memoListByContent.map(memoElement => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this));\n  };\n\n  var renderContainer = Array.from(_contents);\n  var i = 0;\n  console.log(_contents, _mode, _currentSelector, _writeContentMode);\n\n  if (_mode === 'selectorMode') {\n    while (i < renderContainer.length) {\n      if (_currentSelector !== -1 && i === _currentSelector) {\n        if (_writeContentMode === 'memoList') {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memoInput\",\n              children: /*#__PURE__*/_jsxDEV(MemoInput, {\n                _memoContents: renderContainer,\n                _memoIdx: _currentSelector,\n                _setterContents: setAfterContents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)\n            }, renderContainer[i].todolist + \"mempInputs\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), makeMemoDivList(renderContainer[i].memolist)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this));\n        } else {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoMainElement\",\n          children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist)]\n        }, renderContainer[i].todolist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this));\n      }\n\n      i = i + 1;\n    } //end while\n\n  } else {\n    while (i < renderContainer.length) {\n      returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoMainElement\",\n        children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist)]\n      }, renderContainer[i].todolist, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this));\n      i = i + 1;\n    }\n  }\n\n  return returnList;\n}\n\n_s(TodoMemoDiv, \"BmVK3FTFSWSFaJR3qCfacxVLgHI=\");\n\n_c = TodoMemoDiv;\n;\nexport default TodoMemoDiv;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMemoDiv\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js"],"names":["React","useState","MemoInput","TodoMemoDiv","_contents","_mode","_currentSelector","_writeContentMode","preContents","AfterContents","returnList","setAfterContents","update","makeMemoDivList","memoListByContent","map","memoElement","i","renderContainer","Array","from","console","log","length","push","todolist","memolist"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElement.css\"\n\n\n\nfunction TodoMemoDiv({_contents,_mode,_currentSelector,_writeContentMode}){\n    const [preContents, AfterContents] = useState(_contents);\n    var returnList =[]\n\n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n\n    const makeMemoDivList =(memoListByContent)=>{\n        return(\n            memoListByContent.map((memoElement)=>(\n                <div className=\"memoElement\" key={i+memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n\n    var renderContainer = Array.from(_contents);\n    var i=0;\n    \n    console.log(_contents,_mode,_currentSelector,_writeContentMode);\n\n    if(_mode === 'selectorMode'){\n        while(i<renderContainer.length){\n            if(_currentSelector!==-1 && i===_currentSelector){\n                if(_writeContentMode ==='memoList'){\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n\n                            <div className=\"memoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n                                <MemoInput\n                                    _memoContents = {renderContainer}\n                                    _memoIdx = {_currentSelector}\n                                    _setterContents = {setAfterContents}\n                                ></MemoInput> \n                            </div>\n                            {makeMemoDivList(renderContainer[i].memolist)}\n                        </div>\n                    );\n                }else{\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n                            {makeMemoDivList(renderContainer[i].memolist)}\n                        </div>\n                    );\n                }\n            }else{\n                returnList.push(\n                    <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {makeMemoDivList(renderContainer[i].memolist)}\n                    </div>\n                );\n            }\n            i=i+1;\n        }//end while\n    }else{\n        while(i<renderContainer.length){\n            returnList.push(\n            <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                {renderContainer[i].todolist}\n                {makeMemoDivList(renderContainer[i].memolist)}\n            </div>\n            );\n            \n            i=i+1\n        }\n    }\n    return(\n        returnList\n    );\n};\n\nexport default TodoMemoDiv;"]},"metadata":{},"sourceType":"module"}