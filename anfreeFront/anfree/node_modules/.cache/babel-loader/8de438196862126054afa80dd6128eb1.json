{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDivEnter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElementEnter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoMemoDivEnter(_ref) {\n  _s();\n\n  let {\n    _contents,\n    _mode,\n    _currentTodoSelector,\n    _writeContentMode,\n    _currentMemoSelector\n  } = _ref;\n  // console.log(\"TodoMemoDiv and _currentMemoSelector\" ,_currentTodoSelector, _currentMemoSelector);\n  const [preContents, AfterContents] = useState(_contents);\n  var readyList = [];\n  let willNotDoList = [];\n  let willDoList = [];\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  };\n\n  const makeMemoDivList = (memoListByContent, __currentMemoSelector) => {\n    return memoListByContent.map((memoElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: __currentMemoSelector === index ? \"memoElement-now\" : \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this));\n  };\n\n  var renderContainer = Array.from(_contents);\n  var i = 0;\n\n  if (_mode === 'selectorMode') {\n    console.log(renderContainer);\n\n    while (i < renderContainer.length) {\n      if (_currentTodoSelector !== -1 && i === _currentTodoSelector) {\n        if (_writeContentMode === 'memoList') {\n          readyList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"MemoInput\",\n              children: /*#__PURE__*/_jsxDEV(MemoInput, {\n                _memoContents: renderContainer,\n                _memoIdx: _currentTodoSelector,\n                _setterContents: setAfterContents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)\n            }, renderContainer[i].todolist + \"mempInputs\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), makeMemoDivList(renderContainer[i].memolist, _currentMemoSelector)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this));\n        } else {\n          readyList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        readyList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoMainElement\",\n          children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n        }, renderContainer[i].todolist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this));\n      }\n\n      i = i + 1;\n    } //end while\n\n  } else {\n    while (i < renderContainer.length) {\n      readyList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoMainElement\",\n        children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n      }, renderContainer[i].todolist, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this));\n      i = i + 1;\n    }\n  }\n\n  return readyList;\n}\n\n_s(TodoMemoDivEnter, \"BmVK3FTFSWSFaJR3qCfacxVLgHI=\");\n\n_c = TodoMemoDivEnter;\n;\nexport default TodoMemoDivEnter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMemoDivEnter\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDivEnter.js"],"names":["React","useState","MemoInput","TodoMemoDivEnter","_contents","_mode","_currentTodoSelector","_writeContentMode","_currentMemoSelector","preContents","AfterContents","readyList","willNotDoList","willDoList","setAfterContents","update","makeMemoDivList","memoListByContent","__currentMemoSelector","map","memoElement","index","i","renderContainer","Array","from","console","log","length","push","todolist","memolist"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,wBAAP;;;AAEA,SAASC,gBAAT,OAAwG;AAAA;;AAAA,MAA9E;AAACC,IAAAA,SAAD;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA,oBAAjB;AAAsCC,IAAAA,iBAAtC;AAAwDC,IAAAA;AAAxD,GAA8E;AACpG;AACA,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BT,QAAQ,CAACG,SAAD,CAA7C;AACA,MAAIO,SAAS,GAAE,EAAf;AACA,MAAIC,aAAa,GAAE,EAAnB;AACA,MAAIC,UAAU,GAAE,EAAhB;;AACA,QAAMC,gBAAgB,GAAGC,MAAD,IAAU;AAC9BL,IAAAA,aAAa,CAACK,MAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAE,CAACC,iBAAD,EAAmBC,qBAAnB,KAA2C;AAC9D,WACID,iBAAiB,CAACE,GAAlB,CAAsB,CAACC,WAAD,EAAaC,KAAb,kBAClB;AAAK,MAAA,SAAS,EAAGH,qBAAqB,KAAGG,KAAzB,GAAmC,iBAAnC,GAAqD,aAArE;AAAA,gBAAyGD;AAAzG,OAAyFE,CAAC,GAACF,WAA3F;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,GAND;;AAUA,MAAIG,eAAe,GAAGC,KAAK,CAACC,IAAN,CAAWrB,SAAX,CAAtB;AACA,MAAIkB,CAAC,GAAC,CAAN;;AAEA,MAAGjB,KAAK,KAAK,cAAb,EAA4B;AACxBqB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;;AAIA,WAAMD,CAAC,GAACC,eAAe,CAACK,MAAxB,EAA+B;AAC3B,UAAGtB,oBAAoB,KAAG,CAAC,CAAxB,IAA6BgB,CAAC,KAAGhB,oBAApC,EAAyD;AACrD,YAAGC,iBAAiB,KAAI,UAAxB,EAAmC;AAC/BI,UAAAA,SAAS,CAACkB,IAAV,eACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,uBACKN,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QADxB,eAEI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAIP,eADrB;AAEI,gBAAA,QAAQ,EAAIjB,oBAFhB;AAGI,gBAAA,eAAe,EAAIQ;AAHvB;AAAA;AAAA;AAAA;AAAA;AADJ,eAAgCS,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QAAnB,GAA6B,YAA7D;AAAA;AAAA;AAAA;AAAA,oBAFJ,EASKd,eAAe,CAACO,eAAe,CAACD,CAAD,CAAf,CAAmBS,QAApB,EAA6BvB,oBAA7B,CATpB;AAAA,aAA0Ce,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QAA7D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAaH,SAdD,MAcK;AACDnB,UAAAA,SAAS,CAACkB,IAAV,eACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,uBACKN,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QADxB,EAEKd,eAAe,CAACO,eAAe,CAACD,CAAD,CAAf,CAAmBS,QAApB,EAA6B,CAAC,CAA9B,CAFpB;AAAA,aAA0CR,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QAA7D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH;AACJ,OAvBD,MAuBK;AACDnB,QAAAA,SAAS,CAACkB,IAAV,eACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,qBACKN,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QADxB,EAEKd,eAAe,CAACO,eAAe,CAACD,CAAD,CAAf,CAAmBS,QAApB,EAA6B,CAAC,CAA9B,CAFpB;AAAA,WAAsCR,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QAAzD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;;AACDR,MAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;AACH,KAtCuB,CAsCvB;;AACJ,GAvCD,MAuCK;AACD,WAAMA,CAAC,GAACC,eAAe,CAACK,MAAxB,EAA+B;AAC3BjB,MAAAA,SAAS,CAACkB,IAAV,eACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,mBACKN,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QADxB,EAEKd,eAAe,CAACO,eAAe,CAACD,CAAD,CAAf,CAAmBS,QAApB,EAA6B,CAAC,CAA9B,CAFpB;AAAA,SAAsCR,eAAe,CAACD,CAAD,CAAf,CAAmBQ,QAAzD;AAAA;AAAA;AAAA;AAAA,cADA;AAOAR,MAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;AACH;AACJ;;AACD,SACIX,SADJ;AAGH;;GA7EQR,gB;;KAAAA,gB;AA6ER;AAED,eAAeA,gBAAf","sourcesContent":["import React ,{useState}from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElementEnter.css\"\n\nfunction TodoMemoDivEnter({_contents,_mode,_currentTodoSelector,_writeContentMode,_currentMemoSelector}){\n    // console.log(\"TodoMemoDiv and _currentMemoSelector\" ,_currentTodoSelector, _currentMemoSelector);\n    const [preContents, AfterContents] = useState(_contents);\n    var readyList =[]\n    let willNotDoList =[]\n    let willDoList =[];\n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n\n    const makeMemoDivList =(memoListByContent,__currentMemoSelector)=>{\n        return(\n            memoListByContent.map((memoElement,index)=>(\n                <div className={(__currentMemoSelector===index ) ? \"memoElement-now\":\"memoElement\"} key={i+memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n    \n\n\n    var renderContainer = Array.from(_contents);\n    var i=0;\n    \n    if(_mode === 'selectorMode'){\n        console.log(renderContainer);\n\n\n\n        while(i<renderContainer.length){\n            if(_currentTodoSelector!==-1 && i===_currentTodoSelector){\n                if(_writeContentMode ==='memoList'){\n                    readyList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n                            <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n                                <MemoInput\n                                    _memoContents = {renderContainer}\n                                    _memoIdx = {_currentTodoSelector}\n                                    _setterContents = {setAfterContents}\n                                ></MemoInput> \n                            </div>\n                            {makeMemoDivList(renderContainer[i].memolist,_currentMemoSelector)}\n                        </div>\n                    );\n                }else{\n                    readyList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n                            {makeMemoDivList(renderContainer[i].memolist,-1)}\n                        </div>\n                    );\n                }\n            }else{\n                readyList.push(\n                    <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {makeMemoDivList(renderContainer[i].memolist,-1)}\n                    </div>\n                );\n            }\n            i=i+1;\n        }//end while\n    }else{\n        while(i<renderContainer.length){\n            readyList.push(\n            <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                {renderContainer[i].todolist}\n                {makeMemoDivList(renderContainer[i].memolist,-1)}\n            </div>\n            );\n            \n            i=i+1\n        }\n    }\n    return(\n        readyList\n    );\n};\n\nexport default TodoMemoDivEnter; "]},"metadata":{},"sourceType":"module"}