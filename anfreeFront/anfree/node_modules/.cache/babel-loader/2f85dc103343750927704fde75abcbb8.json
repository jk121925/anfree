{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js\";\nimport React, { memo, useState } from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoMemoDivReady(props) {\n  const {\n    listSelector,\n    todoSelector,\n    renderTodoList,\n    memoSelector,\n    todoMode,\n    memoUpdate\n  } = props;\n  console.log(props);\n  var returnRenderList = [];\n\n  const makeMemoDivList = (memoListByList, memoSelector) => {\n    return memoListByList.map((memoElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: memoSelector === index ? \"memoElement-now\" : \"memoElement\",\n      children: memoElement\n    }, index + \"_\" + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this));\n  };\n\n  const makeReadyTodoDivList = (listSelector, todoSelector, renderTodoList, memoSelector) => {\n    let tempArr = [];\n    let i = 0;\n    let setClassName = \"READY\";\n\n    while (i < renderTodoList[listSelector].length) {\n      if (!todoMode && i === todoSelector) {\n        tempArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: todoSelector === i ? setClassName + \"-now\" : setClassName,\n          children: [renderTodoList[listSelector][i].todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"MemoInput\",\n            children: /*#__PURE__*/_jsxDEV(RenderMemoInput, {\n              renderTodoList: renderTodoList,\n              memoSelector: memoSelector,\n              listSelector: listSelector,\n              todoSelector: todoSelector,\n              memoUpdate: memoUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this)\n          }, renderTodoList[i].todolist + \"mempInputs\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), renderTodoList[listSelector][i].memolist.length != 0 ? makeMemoDivList(renderTodoList[listSelector][i].memolist, memoSelector) : null]\n        }, renderTodoList[i] + \"-\" + i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this));\n      } else {\n        tempArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: todoSelector === i ? setClassName + \"-now\" : setClassName,\n          children: [renderTodoList[listSelector][i].todolist, renderTodoList[listSelector][i].memolist.length != 0 ? makeMemoDivList(renderTodoList[listSelector][i].memolist, memoSelector) : null]\n        }, renderTodoList[i] + \"-\" + i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this));\n      }\n\n      i = i + 1;\n    }\n\n    return tempArr;\n  };\n\n  returnRenderList.push(makeReadyTodoDivList(listSelector, todoSelector, renderTodoList, memoSelector)); // var renderContainer = Array.from(renderTodoList);\n  // var i=0;\n  // if(ActionMode === 'selectorMode'){\n  //     while(i<renderContainer.length){\n  //         if(todoSelector!==-1 && i===todoSelector){\n  //             if(writeMode ==='memoList'){\n  //                 returnList.push(\n  //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n  //                         {renderContainer[i].todolist}\n  //                         <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n  //                             <RenderMemoInput\n  //                                 _memoContents = {renderContainer}\n  //                                 _memoIdx = {todoSelector}\n  //                                 _setterContents = {setAfterContents}\n  //                             ></RenderMemoInput> \n  //                         </div>\n  //                         {makeMemoDivList(renderContainer[i].memolist,memoSelector)}\n  //                     </div>\n  //                 );\n  //             }else{\n  //                 returnList.push(\n  //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n  //                         {renderContainer[i].todolist}\n  //                         {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //                     </div>\n  //                 );\n  //             }\n  //         }else{\n  //             returnList.push(\n  //                 <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n  //                     {renderContainer[i].todolist}\n  //                     {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //                 </div>\n  //             );\n  //         }\n  //         i=i+1;\n  //     }//end while\n  // }else{\n  //     while(i<renderContainer.length){\n  //         returnList.push(\n  //         <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n  //             {renderContainer[i].todolist}\n  //             {makeMemoDivList(renderContainer[i].memolist,-1)}\n  //         </div>\n  //         );\n  //         i=i+1\n  //     }\n  // }\n\n  return returnRenderList;\n}\n\n_c = TodoMemoDivReady;\n;\nexport default TodoMemoDivReady;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMemoDivReady\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js"],"names":["React","memo","useState","RenderMemoInput","TodoMemoDivReady","props","listSelector","todoSelector","renderTodoList","memoSelector","todoMode","memoUpdate","console","log","returnRenderList","makeMemoDivList","memoListByList","map","memoElement","index","makeReadyTodoDivList","tempArr","i","setClassName","length","push","todolist","memolist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,8BAAP;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAC5B,QAAM;AAACC,IAAAA,YAAD;AAAcC,IAAAA,YAAd;AAA2BC,IAAAA,cAA3B;AAA0CC,IAAAA,YAA1C;AAAuDC,IAAAA,QAAvD;AAAgEC,IAAAA;AAAhE,MAA8EN,KAApF;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,MAAIS,gBAAgB,GAAE,EAAtB;;AACA,QAAMC,eAAe,GAAE,CAACC,cAAD,EAAgBP,YAAhB,KAA+B;AAClD,WACIO,cAAc,CAACC,GAAf,CAAmB,CAACC,WAAD,EAAaC,KAAb,kBACf;AAAK,MAAA,SAAS,EAAGV,YAAY,KAAGU,KAAhB,GAA0B,iBAA1B,GAA4C,aAA5D;AAAA,gBAA0GD;AAA1G,OAAgFC,KAAK,GAAE,GAAP,GAAYD,WAA5F;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,GAND;;AAQA,QAAME,oBAAoB,GAAG,CAACd,YAAD,EAAcC,YAAd,EAA2BC,cAA3B,EAA0CC,YAA1C,KAA0D;AACnF,QAAIY,OAAO,GAAG,EAAd;AACA,QAAIC,CAAC,GAAC,CAAN;AACA,QAAIC,YAAY,GAAG,OAAnB;;AACA,WAAMD,CAAC,GAACd,cAAc,CAACF,YAAD,CAAd,CAA6BkB,MAArC,EAA4C;AACxC,UAAG,CAACd,QAAD,IAAYY,CAAC,KAAKf,YAArB,EAAkC;AAC9Bc,QAAAA,OAAO,CAACI,IAAR,eACI;AAAK,UAAA,SAAS,EAAGlB,YAAY,KAAKe,CAAlB,GAAsBC,YAAY,GAAG,MAArC,GAA8CA,YAA9D;AAAA,qBACKf,cAAc,CAACF,YAAD,CAAd,CAA6BgB,CAA7B,EAAgCI,QADrC,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACA,QAAC,eAAD;AACI,cAAA,cAAc,EAAIlB,cADtB;AAEI,cAAA,YAAY,EAAIC,YAFpB;AAGI,cAAA,YAAY,EAAIH,YAHpB;AAII,cAAA,YAAY,EAAIC,YAJpB;AAKI,cAAA,UAAU,EAAII;AALlB;AAAA;AAAA;AAAA;AAAA;AADA,aAAgCH,cAAc,CAACc,CAAD,CAAd,CAAkBI,QAAlB,GAA4B,YAA5D;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWMlB,cAAc,CAACF,YAAD,CAAd,CAA6BgB,CAA7B,EAAgCK,QAAhC,CAAyCH,MAAzC,IAAkD,CAAnD,GAAuDT,eAAe,CAACP,cAAc,CAACF,YAAD,CAAd,CAA6BgB,CAA7B,EAAgCK,QAAjC,EAA0ClB,YAA1C,CAAtE,GAAgI,IAXrI;AAAA,WAAiFD,cAAc,CAACc,CAAD,CAAd,GAAoB,GAApB,GAA0BA,CAA3G;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAhBD,MAiBI;AACAD,QAAAA,OAAO,CAACI,IAAR,eACI;AAAK,UAAA,SAAS,EAAGlB,YAAY,KAAKe,CAAlB,GAAsBC,YAAY,GAAG,MAArC,GAA8CA,YAA9D;AAAA,qBACKf,cAAc,CAACF,YAAD,CAAd,CAA6BgB,CAA7B,EAAgCI,QADrC,EAEMlB,cAAc,CAACF,YAAD,CAAd,CAA6BgB,CAA7B,EAAgCK,QAAhC,CAAyCH,MAAzC,IAAkD,CAAnD,GAAuDT,eAAe,CAACP,cAAc,CAACF,YAAD,CAAd,CAA6BgB,CAA7B,EAAgCK,QAAjC,EAA0ClB,YAA1C,CAAtE,GAAgI,IAFrI;AAAA,WAAiFD,cAAc,CAACc,CAAD,CAAd,GAAoB,GAApB,GAA0BA,CAA3G;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;;AACDA,MAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AACH;;AACD,WAAOD,OAAP;AACH,GAjCD;;AAmCAP,EAAAA,gBAAgB,CAACW,IAAjB,CAAsBL,oBAAoB,CAACd,YAAD,EAAcC,YAAd,EAA2BC,cAA3B,EAA0CC,YAA1C,CAA1C,EA/C4B,CAkD5B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,SACIK,gBADJ;AAGH;;KAvGQV,gB;AAuGR;AAED,eAAeA,gBAAf","sourcesContent":["import React ,{ memo, useState}from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\"\n\nfunction TodoMemoDivReady(props){\n    const {listSelector,todoSelector,renderTodoList,memoSelector,todoMode,memoUpdate} = props;\n    console.log(props)\n    var returnRenderList =[]\n    const makeMemoDivList =(memoListByList,memoSelector)=>{\n        return(\n            memoListByList.map((memoElement,index)=>(\n                <div className={(memoSelector===index ) ? \"memoElement-now\":\"memoElement\"} key={index+ \"_\"+ memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n\n    const makeReadyTodoDivList = (listSelector,todoSelector,renderTodoList,memoSelector) =>{\n        let tempArr = []; \n        let i=0;\n        let setClassName = \"READY\";\n        while(i<renderTodoList[listSelector].length){            \n            if(!todoMode&& i === todoSelector){\n                tempArr.push(\n                    <div className={(todoSelector === i)? setClassName + \"-now\" : setClassName} key={renderTodoList[i] + \"-\" + i}>\n                        {renderTodoList[listSelector][i].todolist}\n                        <div className=\"MemoInput\" key={renderTodoList[i].todolist +\"mempInputs\"}>\n                        <RenderMemoInput\n                            renderTodoList = {renderTodoList}\n                            memoSelector = {memoSelector}\n                            listSelector = {listSelector}\n                            todoSelector = {todoSelector}\n                            memoUpdate = {memoUpdate}\n                        />\n                        </div>\n                        {(renderTodoList[listSelector][i].memolist.length !=0)? makeMemoDivList(renderTodoList[listSelector][i].memolist,memoSelector) : null}\n                    </div>\n                )\n            }\n            else{\n                tempArr.push(\n                    <div className={(todoSelector === i)? setClassName + \"-now\" : setClassName} key={renderTodoList[i] + \"-\" + i}>\n                        {renderTodoList[listSelector][i].todolist}\n                        {(renderTodoList[listSelector][i].memolist.length !=0)? makeMemoDivList(renderTodoList[listSelector][i].memolist,memoSelector) : null}\n                    </div>\n                )\n            }\n            i = i+1;\n        }\n        return tempArr;\n    }\n    \n    returnRenderList.push(makeReadyTodoDivList(listSelector,todoSelector,renderTodoList,memoSelector));\n\n\n    // var renderContainer = Array.from(renderTodoList);\n    // var i=0;\n    \n    // if(ActionMode === 'selectorMode'){\n    //     while(i<renderContainer.length){\n    //         if(todoSelector!==-1 && i===todoSelector){\n    //             if(writeMode ==='memoList'){\n    //                 returnList.push(\n    //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n    //                         {renderContainer[i].todolist}\n    //                         <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n    //                             <RenderMemoInput\n    //                                 _memoContents = {renderContainer}\n    //                                 _memoIdx = {todoSelector}\n    //                                 _setterContents = {setAfterContents}\n    //                             ></RenderMemoInput> \n    //                         </div>\n    //                         {makeMemoDivList(renderContainer[i].memolist,memoSelector)}\n    //                     </div>\n    //                 );\n    //             }else{\n    //                 returnList.push(\n    //                     <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n    //                         {renderContainer[i].todolist}\n    //                         {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //                     </div>\n    //                 );\n    //             }\n    //         }else{\n    //             returnList.push(\n    //                 <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n    //                     {renderContainer[i].todolist}\n    //                     {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //                 </div>\n    //             );\n    //         }\n    //         i=i+1;\n    //     }//end while\n    // }else{\n    //     while(i<renderContainer.length){\n    //         returnList.push(\n    //         <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n    //             {renderContainer[i].todolist}\n    //             {makeMemoDivList(renderContainer[i].memolist,-1)}\n    //         </div>\n    //         );\n            \n    //         i=i+1\n    //     }\n    // }\n    return(\n        returnRenderList\n    );\n};\n\nexport default TodoMemoDivReady; "]},"metadata":{},"sourceType":"module"}