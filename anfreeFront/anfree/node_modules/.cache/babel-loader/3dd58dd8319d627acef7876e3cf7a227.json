{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/Todolist.js\";\nimport React, { Component } from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\";\nimport RenderTodoInput from \"./RenderTodoInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todolist extends Component {\n  constructor(props) {\n    super(props);\n    this.contentsMaxIdx = 0;\n    this.state = {\n      contents: [],\n      todoMode: 'writeTodo',\n      currentSelector: 0\n    };\n  }\n\n  editTodolist() {}\n\n  render() {\n    console.log(this.state.todoMode);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RenderTodoInput, {\n        _contents: this.state.contents,\n        _mode: this.state.todoMode,\n        modeChange: function (changeMode) {\n          this.setState({\n            todoMode: changeMode\n          });\n          console.log(this.state.currentSelector);\n        }.bind(this),\n        updateContents: function (updatelist) {\n          this.contentsMaxIdx = this.contentsMaxIdx + 1;\n          this.setState({\n            contents: updatelist,\n            currentSelector: this.contentsMaxIdx\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RenderTodoList, {\n        contentsData: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Todolist;","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfree/src/TodoList/Todolist.js"],"names":["React","Component","RenderTodoList","RenderTodoInput","Todolist","constructor","props","contentsMaxIdx","state","contents","todoMode","currentSelector","editTodolist","render","console","log","changeMode","setState","bind","updatelist"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;;AACA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAqB,CAArB;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAG,WAFF;AAGTC,MAAAA,eAAe,EAAG;AAHT,KAAX;AAKD;;AAEDC,EAAAA,YAAY,GAAE,CAEb;;AAGDC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,QAAvB;AACA,wBACE;AAAA,8BACE,QAAC,eAAD;AACA,QAAA,SAAS,EAAI,KAAKF,KAAL,CAAWC,QADxB;AAEA,QAAA,KAAK,EAAI,KAAKD,KAAL,CAAWE,QAFpB;AAGA,QAAA,UAAU,EAAI,UAASM,UAAT,EAAoB;AAChC,eAAKC,QAAL,CAAc;AACZP,YAAAA,QAAQ,EAAGM;AADC,WAAd;AAGAF,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWG,eAAvB;AACD,SALa,CAKZO,IALY,CAKP,IALO,CAHd;AASA,QAAA,cAAc,EAAE,UAASC,UAAT,EAAoB;AAClC,eAAKZ,cAAL,GAAsB,KAAKA,cAAL,GAAoB,CAA1C;AACA,eAAKU,QAAL,CAAc;AACZR,YAAAA,QAAQ,EAAGU,UADC;AAEZR,YAAAA,eAAe,EAAG,KAAKJ;AAFX,WAAd;AAID,SANe,CAMdW,IANc,CAMT,IANS;AAThB;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,cAAD;AAAgB,QAAA,YAAY,EAAE,KAAKV,KAAL,CAAWC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAzC2B;;AA4C9B,eAAeL,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\"\nimport RenderTodoInput from \"./RenderTodoInput.js\";\nclass Todolist extends Component{\n    constructor(props){\n      super(props);\n      this.contentsMaxIdx =0;\n      \n      this.state={\n        contents :[],\n        todoMode : 'writeTodo',\n        currentSelector : 0\n      }\n    }\n    \n    editTodolist(){\n\n    }\n\n\n    render(){\n      console.log(this.state.todoMode);\n      return(\n        <div>\n          <RenderTodoInput \n          _contents = {this.state.contents} \n          _mode = {this.state.todoMode}\n          modeChange = {function(changeMode){\n            this.setState({\n              todoMode : changeMode\n            })\n            console.log(this.state.currentSelector);\n          }.bind(this)}\n          updateContents={function(updatelist){\n            this.contentsMaxIdx = this.contentsMaxIdx+1;\n            this.setState({\n              contents : updatelist,\n              currentSelector : this.contentsMaxIdx\n            })\n          }.bind(this)}></RenderTodoInput>\n          <RenderTodoList contentsData={this.state.contents}></RenderTodoList>\n        </div>\n        \n      );\n    }\n  }\n\n  export default Todolist;"]},"metadata":{},"sourceType":"module"}