{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MemoDiv(_ref) {\n  let {\n    memoElement,\n    _key\n  } = _ref;\n  // console.log(memoElement);\n  console.log(_key);\n  var return_temp = [];\n  return_temp.push( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memoElement\",\n    children: memoElement\n  }, _key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  console.log(return_temp);\n  return return_temp;\n}\n\n_c = MemoDiv;\n;\n\nfunction TodoMemoDiv(_ref2) {\n  _s();\n\n  let {\n    _contents,\n    _mode,\n    _currentSelector,\n    _writeContentMode\n  } = _ref2;\n  const [preContents, AfterContents] = useState(_contents);\n  var returnList = []; // console.log(\"after memo = \" ,_contents);\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  };\n\n  const makeMemoDivList = memoListByContent => {\n    return memoListByContent.map(memoElement => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n    );\n  };\n\n  var renderContainer = Array.from(_contents);\n  var i = 0;\n  console.log(_contents, _mode, _currentSelector, _writeContentMode);\n\n  if (_mode === 'selectorMode') {\n    while (i < renderContainer.length) {\n      if (_currentSelector !== -1 && i === _currentSelector) {\n        if (_writeContentMode === 'memoList') {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memoInput\",\n              children: /*#__PURE__*/_jsxDEV(MemoInput, {\n                _memoContents: renderContainer,\n                _memoIdx: _currentSelector,\n                _setterContents: setAfterContents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)\n            }, renderContainer[i].todolist + \"mempInputs\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), makeMemoDivList(renderContainer[i].memolist), renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memoElement\",\n              children: memoElement\n            }, i + memoElement, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this) // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n            )]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this));\n        } else {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist), renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memoElement\",\n              children: memoElement\n            }, i + memoElement, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this) // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n            )]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoMainElement\",\n          children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist), renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memoElement\",\n            children: memoElement\n          }, i + memoElement, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this) // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n          )]\n        }, renderContainer[i].todolist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this));\n      }\n\n      i = i + 1;\n    } //end while\n\n  } else {\n    while (i < renderContainer.length) {\n      returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoMainElement\",\n        children: [renderContainer[i].todolist, renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memoElement\",\n          children: memoElement\n        }, i + memoElement, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this) // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n        )]\n      }, renderContainer[i].todolist, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this));\n      i = i + 1;\n    }\n  }\n\n  console.log(returnList);\n  return returnList;\n}\n\n_s(TodoMemoDiv, \"BmVK3FTFSWSFaJR3qCfacxVLgHI=\");\n\n_c2 = TodoMemoDiv;\n;\nexport default TodoMemoDiv;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemoDiv\");\n$RefreshReg$(_c2, \"TodoMemoDiv\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js"],"names":["React","useState","MemoInput","MemoDiv","memoElement","_key","console","log","return_temp","push","TodoMemoDiv","_contents","_mode","_currentSelector","_writeContentMode","preContents","AfterContents","returnList","setAfterContents","update","makeMemoDivList","memoListByContent","map","i","renderContainer","Array","from","length","todolist","memolist"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElement.css\"\n\n\n\nfunction MemoDiv({memoElement,_key}){\n    // console.log(memoElement);\n    console.log(_key);\n\n    var return_temp = [];\n    return_temp.push(\n    <div className=\"memoElement\" key ={_key}>\n        {memoElement}\n    </div> );\n    console.log(return_temp);\n    return(\n        return_temp \n    );\n};\n\n\nfunction TodoMemoDiv({_contents,_mode,_currentSelector,_writeContentMode}){\n    const [preContents, AfterContents] = useState(_contents);\n    var returnList =[]\n    // console.log(\"after memo = \" ,_contents);\n\n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n\n    const makeMemoDivList =(memoListByContent)=>{\n        return(\n            memoListByContent.map((memoElement)=>(\n                <div className=\"memoElement\" key={i+memoElement}>{memoElement}</div>\n                // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n            ))\n        )\n    }\n\n    var renderContainer = Array.from(_contents);\n    var i=0;\n    \n    console.log(_contents,_mode,_currentSelector,_writeContentMode);\n\n    if(_mode === 'selectorMode'){\n        while(i<renderContainer.length){\n            if(_currentSelector!==-1 && i===_currentSelector){\n                if(_writeContentMode ==='memoList'){\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n\n                            <div className=\"memoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n                                <MemoInput\n                                    _memoContents = {renderContainer}\n                                    _memoIdx = {_currentSelector}\n                                    _setterContents = {setAfterContents}\n                                ></MemoInput> \n                            </div>\n                            {makeMemoDivList(renderContainer[i].memolist)}\n                            {renderContainer[i].memolist.map((memoElement)=>(\n                                <div className=\"memoElement\" key={i+memoElement}>{memoElement}</div>\n                                // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n                            ))}\n\n                        </div>\n                    );\n                }else{\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n                            {makeMemoDivList(renderContainer[i].memolist)}\n                            {renderContainer[i].memolist.map((memoElement)=>(\n                                <div className=\"memoElement\" key={i+memoElement}>{memoElement}</div>\n                                // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n                            ))}\n                        </div>\n                    );\n                }\n            }else{\n                returnList.push(\n                    <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {makeMemoDivList(renderContainer[i].memolist)}\n                        {renderContainer[i].memolist.map((memoElement)=>(\n                            <div className=\"memoElement\" key={i+memoElement}>{memoElement}</div>\n                            // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n                        ))}\n                    </div>\n                );\n            }\n            i=i+1;\n        }//end while\n    }else{\n        while(i<renderContainer.length){\n            returnList.push(\n            <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                {renderContainer[i].todolist}\n                {renderContainer[i].memolist.map((memoElement)=>(\n                    <div className=\"memoElement\" key={i+memoElement}>{memoElement}</div>\n                    // <MemoDiv memoElement={memoElement} _key={i+\"\"+renderContainer[i].todolist}/>\n                ))}\n            </div>\n            );\n            \n            i=i+1\n        }\n    }\n    console.log(returnList);\n    return(\n        returnList\n    );\n};\n\nexport default TodoMemoDiv;"]},"metadata":{},"sourceType":"module"}