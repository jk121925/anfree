{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDiveFilter.js\";\nimport React, { useState } from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementFilter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderTodoMemoDiveFilter(_ref) {\n  let {\n    _mode,\n    _currentTodoSelector,\n    _currentMemoSelector,\n    _filterTodoCursorListCnt,\n    _filterTodoCursorList\n  } = _ref;\n  // const [preContents, AfterContents] = useState(_contents);\n  let filteredList = []; // const setAfterContents =(update)=>{\n  //     AfterContents(update);\n  // }\n  // make memo <div> list\n  // 메모 리스트를 만드는 component\n\n  const makeMemoDivList = (memoListByContent, __currentMemoSelector) => {\n    return memoListByContent.map((memoElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: __currentMemoSelector === index ? \"memoElement-now\" : \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this));\n  }; // __i => 0 - willNotDoList,1 - readyList ,2 - willDoList\n\n\n  const makeFilterdTodoDivList = (__i, __filteredList, __filterTodoCursorListCnt, __currentTodoSelector, __currentMemoSelector) => {\n    let tempArr = [];\n    let i = 0;\n    let setClassName = __i === 0 ? \"willNotDo\" : __i === 1 ? \"ready\" : \"willDo\";\n\n    while (i < __filteredList[__i].length) {\n      tempArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: __i === __filterTodoCursorListCnt && i === __currentTodoSelector ? setClassName + \"-now\" : setClassName,\n        children: [__filteredList[__i][i].todolist, makeMemoDivList(__filteredList[__i][i].memolist, __currentMemoSelector)]\n      }, __filteredList[__i][i].todolist, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this));\n      i = i + 1;\n    }\n\n    return tempArr;\n  };\n\n  var i = 0;\n\n  for (i = 0; i < 3; i++) {\n    filteredList.push(makeFilterdTodoDivList(i, _filterTodoCursorList, _filterTodoCursorListCnt, _currentTodoSelector, _currentMemoSelector));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filterDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"willNotDoListDiv\",\n      children: filteredList[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"readyDiv\",\n      children: filteredList[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"willDoListDiv\",\n      children: filteredList[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_c = RenderTodoMemoDiveFilter;\n;\nexport default RenderTodoMemoDiveFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderTodoMemoDiveFilter\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDiveFilter.js"],"names":["React","useState","RenderMemoInput","RenderTodoMemoDiveFilter","_mode","_currentTodoSelector","_currentMemoSelector","_filterTodoCursorListCnt","_filterTodoCursorList","filteredList","makeMemoDivList","memoListByContent","__currentMemoSelector","map","memoElement","index","i","makeFilterdTodoDivList","__i","__filteredList","__filterTodoCursorListCnt","__currentTodoSelector","tempArr","setClassName","length","push","todolist","memolist"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,+BAAP;;;AAEA,SAASC,wBAAT,OAAmI;AAAA,MAAjG;AAACC,IAAAA,KAAD;AAAOC,IAAAA,oBAAP;AAA4BC,IAAAA,oBAA5B;AAAiDC,IAAAA,wBAAjD;AAA0EC,IAAAA;AAA1E,GAAiG;AAC/H;AACA,MAAIC,YAAY,GAAE,EAAlB,CAF+H,CAG/H;AACA;AACA;AAEA;AACA;;AACA,QAAMC,eAAe,GAAE,CAACC,iBAAD,EAAmBC,qBAAnB,KAA2C;AAC9D,WACID,iBAAiB,CAACE,GAAlB,CAAsB,CAACC,WAAD,EAAaC,KAAb,kBAClB;AAAK,MAAA,SAAS,EAAGH,qBAAqB,KAAGG,KAAzB,GAAmC,iBAAnC,GAAqD,aAArE;AAAA,gBAAyGD;AAAzG,OAAyFE,CAAC,GAACF,WAA3F;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,GAND,CAT+H,CAgB/H;;;AACA,QAAMG,sBAAsB,GAAE,CAACC,GAAD,EAAKC,cAAL,EAAoBC,yBAApB,EAA8CC,qBAA9C,EAAoET,qBAApE,KAA4F;AACtH,QAAIU,OAAO,GAAE,EAAb;AAAiB,QAAIN,CAAC,GAAC,CAAN;AACjB,QAAIO,YAAY,GAAIL,GAAG,KAAK,CAAT,GAAc,WAAd,GAA8BA,GAAG,KAAK,CAAT,GAAc,OAAd,GAAwB,QAAxE;;AAEA,WAAMF,CAAC,GAACG,cAAc,CAACD,GAAD,CAAd,CAAoBM,MAA5B,EAAmC;AAE/BF,MAAAA,OAAO,CAACG,IAAR,eACI;AAAK,QAAA,SAAS,EAAGP,GAAG,KAAKE,yBAAR,IAAqCJ,CAAC,KAAKK,qBAA5C,GAAqEE,YAAY,GAAG,MAApF,GAA6FA,YAA7G;AAAA,mBACKJ,cAAc,CAACD,GAAD,CAAd,CAAoBF,CAApB,EAAuBU,QAD5B,EAEKhB,eAAe,CAACS,cAAc,CAACD,GAAD,CAAd,CAAoBF,CAApB,EAAuBW,QAAxB,EAAiCf,qBAAjC,CAFpB;AAAA,SAAgIO,cAAc,CAACD,GAAD,CAAd,CAAoBF,CAApB,EAAuBU,QAAvJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAMAV,MAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AACH;;AACD,WAAOM,OAAP;AACH,GAfD;;AAkBA,MAAIN,CAAC,GAAC,CAAN;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAC,CAAd,EAAiBA,CAAC,EAAlB,EAAqB;AACjBP,IAAAA,YAAY,CAACgB,IAAb,CAAkBR,sBAAsB,CAACD,CAAD,EAAGR,qBAAH,EAAyBD,wBAAzB,EAAkDF,oBAAlD,EAAuEC,oBAAvE,CAAxC;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACKG,YAAY,CAAC,CAAD;AADjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKA,YAAY,CAAC,CAAD;AADjB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKA,YAAY,CAAC,CAAD;AADjB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;KArDQN,wB;AAqDR;AAED,eAAeA,wBAAf","sourcesContent":["import React ,{useState}from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementFilter.css\"\n\nfunction RenderTodoMemoDiveFilter({_mode,_currentTodoSelector,_currentMemoSelector,_filterTodoCursorListCnt,_filterTodoCursorList}){\n    // const [preContents, AfterContents] = useState(_contents);\n    let filteredList =[];\n    // const setAfterContents =(update)=>{\n    //     AfterContents(update);\n    // }\n\n    // make memo <div> list\n    // 메모 리스트를 만드는 component\n    const makeMemoDivList =(memoListByContent,__currentMemoSelector)=>{\n        return(\n            memoListByContent.map((memoElement,index)=>(\n                <div className={(__currentMemoSelector===index ) ? \"memoElement-now\":\"memoElement\"} key={i+memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n    // __i => 0 - willNotDoList,1 - readyList ,2 - willDoList\n    const makeFilterdTodoDivList =(__i,__filteredList,__filterTodoCursorListCnt,__currentTodoSelector,__currentMemoSelector)=>{\n        let tempArr =[]; let i=0;\n        let setClassName = (__i === 0) ? \"willNotDo\" : ((__i === 1) ? \"ready\" : \"willDo\");\n\n        while(i<__filteredList[__i].length){\n            \n            tempArr.push(\n                <div className={(__i === __filterTodoCursorListCnt && i === __currentTodoSelector) ? setClassName + \"-now\" : setClassName} key={__filteredList[__i][i].todolist}>\n                    {__filteredList[__i][i].todolist}\n                    {makeMemoDivList(__filteredList[__i][i].memolist,__currentMemoSelector)}\n                </div>\n            )\n            i = i+1;\n        }\n        return tempArr;\n    }\n\n\n    var i=0;\n    for( i = 0; i<3; i++){\n        filteredList.push(makeFilterdTodoDivList(i,_filterTodoCursorList,_filterTodoCursorListCnt,_currentTodoSelector,_currentMemoSelector));\n    }\n    \n    return(\n        <div className=\"filterDiv\">\n            <div className=\"willNotDoListDiv\">\n                {filteredList[0]}\n            </div>\n            <div className=\"readyDiv\">\n                {filteredList[1]}\n            </div>\n            <div className=\"willDoListDiv\">\n                {filteredList[2]}\n            </div>\n        </div>\n    );\n};\n\nexport default RenderTodoMemoDiveFilter; "]},"metadata":{},"sourceType":"module"}