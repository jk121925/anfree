{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MemoDiv(_ref) {\n  let {\n    memoElement,\n    todoElement\n  } = _ref;\n  var memoKey = todoElement + \"-\" + memoElement;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memoElement\",\n    children: memoElement\n  }, memoKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MemoDiv;\n;\n\nfunction TodoMemoDivRender(_ref2) {\n  _s();\n\n  let {\n    _contents,\n    _mode,\n    _currentSelector,\n    _writeContentMode\n  } = _ref2;\n  const [preContents, AfterContents] = useState(_contents);\n  var returnList = [];\n  console.log(\"after memo = \", _contents);\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  };\n\n  var renderContainer = Array.from(_contents);\n  var i = 0;\n  console.log(_contents, _mode, _currentSelector, _writeContentMode);\n\n  if (_mode === 'selectorMode') {\n    while (i < renderContainer.length) {\n      if (_currentSelector !== -1 && i === _currentSelector) {\n        if (_mode === 'memoList') {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memoInput\",\n              children: [/*#__PURE__*/_jsxDEV(MemoInput, {\n                _memoContents: renderContainer,\n                _memoIdx: _currentSelector,\n                _setterContents: setAfterContents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(MemoDiv, {\n                memoElement: memoElement,\n                todoElement: renderContainer[i].todolist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, renderContainer[i].todolist + \"\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this));\n        } else {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memoInput\",\n              children: renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(MemoDiv, {\n                memoElement: memoElement,\n                todoElement: renderContainer[i].todolist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, renderContainer[i].todolist + \"\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoMainElement\",\n          children: [renderContainer[i].todolist, renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(MemoDiv, {\n            memoElement: memoElement,\n            todoElement: renderContainer[i].todolist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this))]\n        }, renderContainer[i].todolist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this));\n      }\n\n      i = i + 1;\n    }\n  } else {\n    while (i < renderContainer.length) {\n      returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoMainElement\",\n        children: [renderContainer[i].todolist, renderContainer[i].memolist.map(memoElement => /*#__PURE__*/_jsxDEV(MemoDiv, {\n          memoElement: memoElement,\n          todoElement: renderContainer[i].todolist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this))]\n      }, renderContainer[i].todolist, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this));\n      i = i + 1;\n    }\n  }\n\n  return returnList;\n}\n\n_s(TodoMemoDivRender, \"BmVK3FTFSWSFaJR3qCfacxVLgHI=\");\n\n_c2 = TodoMemoDivRender;\n;\nexport default TodoMemoDivRender;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemoDiv\");\n$RefreshReg$(_c2, \"TodoMemoDivRender\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/TodoMemoDiv.js"],"names":["React","useState","MemoInput","MemoDiv","memoElement","todoElement","memoKey","TodoMemoDivRender","_contents","_mode","_currentSelector","_writeContentMode","preContents","AfterContents","returnList","console","log","setAfterContents","update","renderContainer","Array","from","i","length","push","todolist","memolist","map"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\nimport MemoInput from \"./MemoInput\";\nimport \"./TodoElement.css\"\n\n\n\nfunction MemoDiv({memoElement,todoElement}){\n    var memoKey = todoElement + \"-\" + memoElement;\n    return(\n        <div className=\"memoElement\" key ={memoKey}>\n            {memoElement}\n        </div>\n    )\n};\n\n\nfunction TodoMemoDivRender({_contents,_mode,_currentSelector,_writeContentMode}){\n    const [preContents, AfterContents] = useState(_contents);\n    var returnList =[]\n    console.log(\"after memo = \" ,_contents);\n\n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n    var renderContainer = Array.from(_contents);\n    var i=0;\n    \n    console.log(_contents,_mode,_currentSelector,_writeContentMode);\n\n    if(_mode === 'selectorMode'){\n        while(i<renderContainer.length){\n            if(_currentSelector!==-1 && i===_currentSelector){\n                if(_mode ==='memoList'){\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist + \"\" +i}>\n                            {renderContainer[i].todolist}\n                            <div className=\"memoInput\">\n                                <MemoInput\n                                    _memoContents = {renderContainer}\n                                    _memoIdx = {_currentSelector}\n                                    _setterContents = {setAfterContents}\n                                ></MemoInput>\n                                {renderContainer[i].memolist.map(memoElement=>(\n                                    <MemoDiv memoElement={memoElement} todoElement={renderContainer[i].todolist}/>\n                                ))}\n                            </div>\n                        </div>\n                    );\n                }else{\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist + \"\" +i}>\n                            {renderContainer[i].todolist}\n                            <div className=\"memoInput\">\n                                {renderContainer[i].memolist.map(memoElement=>(\n                                    <MemoDiv memoElement={memoElement} todoElement={renderContainer[i].todolist}/>\n                                ))}\n                            </div>\n                        </div>\n                    );\n                }\n            }else{\n                returnList.push(\n                    <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {renderContainer[i].memolist.map(memoElement=>(\n                            <MemoDiv memoElement={memoElement} todoElement={renderContainer[i].todolist}/>\n                        ))}\n                    </div>\n                );\n            }\n            i=i+1;\n        }\n    }else{\n        while(i<renderContainer.length){\n            returnList.push(\n            <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                {renderContainer[i].todolist}\n                {renderContainer[i].memolist.map(memoElement=>(\n                    <MemoDiv memoElement={memoElement} todoElement={renderContainer[i].todolist}/>\n                ))}\n            </div>\n            );\n            \n            i=i+1\n        }\n    }\n    return(\n        returnList\n    );\n};\n\nexport default TodoMemoDivRender;"]},"metadata":{},"sourceType":"module"}