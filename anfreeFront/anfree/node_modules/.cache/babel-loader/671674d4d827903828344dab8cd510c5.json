{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoMemoDivReady(_ref) {\n  _s();\n\n  let {\n    renderTodoList,\n    ActionMode,\n    todoSelector,\n    writeMode,\n    memoSelector\n  } = _ref;\n  // console.log(\"TodoMemoDiv and memoSelector\" ,todoSelector, memoSelector);\n  // console.log(\"todoMemoDivEnter : render\");\n  const [preContents, AfterContents] = useState(renderTodoList);\n  var returnList = [];\n\n  const setAfterContents = update => {\n    AfterContents(update);\n  };\n\n  const makeMemoDivList = (memoListByContent, _memoSelector) => {\n    return memoListByContent.map((memoElement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _memoSelector === index ? \"memoElement-now\" : \"memoElement\",\n      children: memoElement\n    }, i + memoElement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this));\n  };\n\n  var renderContainer = Array.from(renderTodoList);\n  var i = 0;\n\n  if (ActionMode === 'selectorMode') {\n    while (i < renderContainer.length) {\n      if (todoSelector !== -1 && i === todoSelector) {\n        if (writeMode === 'memoList') {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"MemoInput\",\n              children: /*#__PURE__*/_jsxDEV(RenderMemoInput, {\n                _memoContents: renderContainer,\n                _memoIdx: todoSelector,\n                _setterContents: setAfterContents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)\n            }, renderContainer[i].todolist + \"mempInputs\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), makeMemoDivList(renderContainer[i].memolist, memoSelector)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this));\n        } else {\n          returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n          }, renderContainer[i].todolist, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoMainElement\",\n          children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n        }, renderContainer[i].todolist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this));\n      }\n\n      i = i + 1;\n    } //end while\n\n  } else {\n    while (i < renderContainer.length) {\n      returnList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoMainElement\",\n        children: [renderContainer[i].todolist, makeMemoDivList(renderContainer[i].memolist, -1)]\n      }, renderContainer[i].todolist, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this));\n      i = i + 1;\n    }\n  }\n\n  return returnList;\n}\n\n_s(TodoMemoDivReady, \"Ro16sWxM5X5jChFMUYBOB0kRWUw=\");\n\n_c = TodoMemoDivReady;\n;\nexport default TodoMemoDivReady;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMemoDivReady\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoMemoDivReady.js"],"names":["React","useState","RenderMemoInput","TodoMemoDivReady","renderTodoList","ActionMode","todoSelector","writeMode","memoSelector","preContents","AfterContents","returnList","setAfterContents","update","makeMemoDivList","memoListByContent","_memoSelector","map","memoElement","index","i","renderContainer","Array","from","length","push","todolist","memolist"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\nimport RenderMemoInput from \"./RenderMemoInput\";\nimport \"./RenderTodoElementEnter.css\"\n\nfunction TodoMemoDivReady({renderTodoList,ActionMode,todoSelector,writeMode,memoSelector}){\n    // console.log(\"TodoMemoDiv and memoSelector\" ,todoSelector, memoSelector);\n    // console.log(\"todoMemoDivEnter : render\");\n    const [preContents, AfterContents] = useState(renderTodoList);\n    var returnList =[]\n\n    const setAfterContents =(update)=>{\n        AfterContents(update);\n    }\n\n    const makeMemoDivList =(memoListByContent,_memoSelector)=>{\n        return(\n            memoListByContent.map((memoElement,index)=>(\n                <div className={(_memoSelector===index ) ? \"memoElement-now\":\"memoElement\"} key={i+memoElement}>{memoElement}</div>\n            ))\n        )\n    }\n    \n\n\n    var renderContainer = Array.from(renderTodoList);\n    var i=0;\n    \n    if(ActionMode === 'selectorMode'){\n        while(i<renderContainer.length){\n            if(todoSelector!==-1 && i===todoSelector){\n                if(writeMode ==='memoList'){\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n                            <div className=\"MemoInput\" key={renderContainer[i].todolist +\"mempInputs\"}>\n                                <RenderMemoInput\n                                    _memoContents = {renderContainer}\n                                    _memoIdx = {todoSelector}\n                                    _setterContents = {setAfterContents}\n                                ></RenderMemoInput> \n                            </div>\n                            {makeMemoDivList(renderContainer[i].memolist,memoSelector)}\n                        </div>\n                    );\n                }else{\n                    returnList.push(\n                        <div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>\n                            {renderContainer[i].todolist}\n                            {makeMemoDivList(renderContainer[i].memolist,-1)}\n                        </div>\n                    );\n                }\n            }else{\n                returnList.push(\n                    <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                        {renderContainer[i].todolist}\n                        {makeMemoDivList(renderContainer[i].memolist,-1)}\n                    </div>\n                );\n            }\n            i=i+1;\n        }//end while\n    }else{\n        while(i<renderContainer.length){\n            returnList.push(\n            <div className=\"todoMainElement\" key={renderContainer[i].todolist}>\n                {renderContainer[i].todolist}\n                {makeMemoDivList(renderContainer[i].memolist,-1)}\n            </div>\n            );\n            \n            i=i+1\n        }\n    }\n    return(\n        returnList\n    );\n};\n\nexport default TodoMemoDivReady; "]},"metadata":{},"sourceType":"module"}