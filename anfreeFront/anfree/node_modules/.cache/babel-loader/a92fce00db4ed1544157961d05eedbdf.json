{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoList.js\";\nimport { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport \"./TodoElement.css\";\nimport MemoInput from \"./MemoInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MemeoDivRender(_ref) {\n  let {\n    memoList\n  } = _ref;\n  var i = 0;\n  var memoDivList = [];\n\n  while (i < memoList.length) {\n    memoDivList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memoElement\",\n      children: memoList[i]\n    }, memoList[i], false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this));\n    i = i + 1;\n  }\n\n  return {\n    memoDivList\n  };\n}\n\n_c = MemeoDivRender;\n\nfunction TodoMemoDivRender(_ref2) {\n  let {\n    input\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoMainElement\",\n    children: [input.todolist, MemeoDivRender(input.memoList)]\n  }, input.todolist, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n} // mode, contents\n\n\n_c2 = TodoMemoDivRender;\n\nclass RenderTodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.actionMode = 'writeMode';\n    this.wirteContentMode = 'todoList';\n    this.currentSelector = -1;\n    this.state = {\n      pressShiftCnt: 0,\n      pressArrowDirection: ''\n    };\n  }\n\n  swapContents(UpDown) {\n    var upDownInt = UpDown === 'up' ? -1 : 1;\n    var updateContentsList = Array.from(this.props._contents);\n    var temp = updateContentsList[this.currentSelector];\n    updateContentsList[this.currentSelector] = updateContentsList[this.currentSelector + upDownInt];\n    updateContentsList[this.currentSelector + upDownInt] = temp;\n    this.props.updateContentsTodoList(updateContentsList);\n  } //not use in this phase\n\n\n  structTodoMemo(input) {\n    let memocdivcheck = \"memoElement-\"; // let memoDivList = input.memoList.map((memo)=>\n    //     <div className=\"memoElement\" key={memocdivcheck + memo}>{memo}</div>\n    // );\n    // console.log(\"memoDiv\");\n    // console.log(memoDivList);\n\n    var todoTreestruct = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoMainElement\",\n      children: [input.todolist, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memoElement\",\n        children: input.memoList[0]\n      }, input.memoList[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, input.todolist, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n\n    console.log(todoTreestruct);\n    return todoTreestruct;\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', e => {\n      // console.log(e);\n\n      /*\n          위아래로 움직이는 기능 구현\n      */\n      if (e.shiftKey && 37 <= e.keyCode && e.keyCode <= 40 && this.actionMode === 'selectorMode') {\n        var _pressArrowDirection = e.key;\n\n        if (_pressArrowDirection === 'ArrowDown' && this.currentSelector != this.props._contents.length - 1) {\n          console.log(this.currentSelector);\n          this.swapContents('down');\n        } else if (_pressArrowDirection === 'ArrowUp' && this.currentSelector != 0) {\n          this.swapContents('up');\n        }\n      }\n      /**\n       * 메모기능 구현\n       * selector Mode 일 때 '/'를 누르면 메모 모드로 들어가기\n       * input창이 떠야하고 -> 입력하면 this.props._contents가 업데이트 되어야 함\n       * _contents의 자료구조는 list 이어야 하는가? component이어야 하는가?\n       * 아니면 javascript 구조로 class를 만들어야 하는가? 고민이네\n       * ----> class로 만들어서 memo랑 같이 관리하자 ㅇㅇ 이게 답인듯\n       */\n\n\n      if (this.actionMode === 'selectorMode' && e.key === '/') {\n        if (this.wirteContentMode === 'todoList') this.wirteContentMode = 'memoList';else this.wirteContentMode = 'todoList';\n        this.forceUpdate();\n      }\n      /*\n          delete 기능 구현\n      */\n\n\n      if (e.shiftKey && e.key === 'Delete') {\n        var _deleteContents = Array.from(this.props._contents);\n\n        if (this.props._contents.length === 1) {\n          _deleteContents = [];\n          this.currentSelector = this.currentSelector - 1;\n          this.mode = 'writeMode';\n        } else if (this.props._contents.length !== 0) {\n          for (var i = this.currentSelector; i < _deleteContents.length - 1; i++) {\n            _deleteContents[i] = _deleteContents[i + 1];\n          }\n\n          _deleteContents = _deleteContents.slice(0, _deleteContents.length - 1);\n\n          if (this.currentSelector === this.props._contents.length - 1) {\n            this.currentSelector = this.currentSelector - 1;\n          }\n        }\n\n        this.props.updateContentsTodoList(_deleteContents);\n      }\n      /*\n          writeMode vs selectorMode \n          selectorMode면 움직이고 있는 중입니다.\n      */\n\n\n      if (37 <= e.keyCode && e.keyCode <= 40) {\n        var _pressArrowDirection = e.key;\n\n        if (_pressArrowDirection === 'ArrowDown') {\n          if (this.actionMode === 'writeMode' && this.props._contents.length !== 0) {\n            this.currentSelector = 0;\n            this.actionMode = 'selectorMode';\n            this.props.modeChange('selectorMode');\n          } else if (this.actionMode === 'selectorMode') {\n            this.currentSelector = this.currentSelector === this.props._contents.length - 1 ? this.props._contents.length - 1 : this.currentSelector + 1;\n          }\n        } else if (_pressArrowDirection === 'ArrowUp') {\n          if (this.actionMode === 'selectorMode') {\n            if (this.currentSelector === 0) {\n              this.actionMode = 'writeMode';\n              this.props.modeChange('selectorMode');\n            } else {\n              this.currentSelector = this.currentSelector === 0 ? 0 : this.currentSelector - 1;\n            }\n          }\n        }\n\n        this.forceUpdate();\n      } //end arrow if test\n\n    });\n  }\n\n  makeTodoElementByOrder(selectNumber, mode) {\n    var renderList = [];\n    var renderContainer = Array.from(this.props._contents);\n    var i = 0;\n\n    if (mode === 'selectorMode') {\n      while (i < renderContainer.length) {\n        if (selectNumber !== -1 && i === selectNumber) {\n          // renderContainer[i].memoList.push(\"hi\");\n          // var temp = this.structTodoMemo(renderContainer[i]);\n          // console.log(temp);\n          renderList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement-now\",\n            children: renderContainer[i].todolist\n          }, renderContainer[i].todolist, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 41\n          }, this));\n        } else {\n          renderList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMainElement\",\n            children: renderContainer[i].todolist\n          }, renderContainer[i].todolist, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 41\n          }, this));\n        }\n\n        i = i + 1;\n      }\n    } else {\n      renderList.push(TodoMemoDivRender(renderContainer[i])); //render default -> input todolist\n\n      while (i < renderContainer.length) {\n        renderList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoMainElement\",\n          children: renderContainer[i].todolist\n        }, renderContainer[i].todolist, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 33\n        }, this));\n        i = i + 1;\n      }\n    }\n\n    return renderList;\n  }\n\n  render() {\n    var renderList = this.makeTodoElementByOrder(this.currentSelector, this.actionMode);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RenderTodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemeoDivRender\");\n$RefreshReg$(_c2, \"TodoMemoDivRender\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/RenderTodoList.js"],"names":["render","React","Component","MemoInput","MemeoDivRender","memoList","i","memoDivList","length","push","TodoMemoDivRender","input","todolist","RenderTodoList","constructor","props","actionMode","wirteContentMode","currentSelector","state","pressShiftCnt","pressArrowDirection","swapContents","UpDown","upDownInt","updateContentsList","Array","from","_contents","temp","updateContentsTodoList","structTodoMemo","memocdivcheck","todoTreestruct","console","log","componentDidMount","window","addEventListener","e","shiftKey","keyCode","_pressArrowDirection","key","forceUpdate","_deleteContents","mode","slice","modeChange","makeTodoElementByOrder","selectNumber","renderList","renderContainer"],"mappings":"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","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, {Component} from \"react\";\nimport \"./TodoElement.css\"\nimport MemoInput from \"./MemoInput.js\";\n\nfunction MemeoDivRender({memoList}){\n    var i=0;\n    var memoDivList =[]\n    while(i<memoList.length) {\n        memoDivList.push(\n            <div className=\"memoElement\" key={memoList[i]}>{memoList[i]}</div>\n        )\n        i=i+1;\n    }   \n\n    return(\n        {memoDivList}\n    );\n}\n\nfunction TodoMemoDivRender({input}){\n    return (\n        <div className=\"todoMainElement\" key={input.todolist}>\n            {input.todolist}\n            {MemeoDivRender(input.memoList)}\n        </div>\n    );\n}\n\n\n// mode, contents\nclass RenderTodoList extends Component{\n    constructor(props){\n        super(props);\n        this.actionMode = 'writeMode';\n        this.wirteContentMode = 'todoList';\n        this.currentSelector = -1;\n        this.state={\n            pressShiftCnt :0,\n            pressArrowDirection : ''\n        }\n    }\n    \n    swapContents(UpDown){\n        var upDownInt = (UpDown === 'up')? -1 :1;\n        var updateContentsList = Array.from(this.props._contents);\n        var temp = updateContentsList[this.currentSelector];\n        updateContentsList[this.currentSelector] = updateContentsList[this.currentSelector+upDownInt];\n        updateContentsList[this.currentSelector+upDownInt] = temp;\n        this.props.updateContentsTodoList(updateContentsList);\n    }\n\n    //not use in this phase\n    structTodoMemo(input){\n        let memocdivcheck = \"memoElement-\"\n        // let memoDivList = input.memoList.map((memo)=>\n        //     <div className=\"memoElement\" key={memocdivcheck + memo}>{memo}</div>\n        // );\n        // console.log(\"memoDiv\");\n        // console.log(memoDivList);\n        var todoTreestruct=\n        <div className=\"todoMainElement\" key={input.todolist}>\n            {input.todolist}\n            <div className=\"memoElement\" key={input.memoList[0]}>{input.memoList[0]}</div>\n                {/* {memoDivList} */}\n        </div>\n        console.log(todoTreestruct);\n        return todoTreestruct\n    }\n\n\n    componentDidMount() {\n        window.addEventListener('keydown',(e)=>{\n            // console.log(e);\n            /*\n                위아래로 움직이는 기능 구현\n            */\n            if(e.shiftKey && 37<=e.keyCode && e.keyCode<=40 && this.actionMode === 'selectorMode'){\n                var _pressArrowDirection = e.key;\n                if(_pressArrowDirection === 'ArrowDown' && this.currentSelector!=this.props._contents.length-1){\n                    console.log(this.currentSelector)\n                    this.swapContents('down');\n                }else if(_pressArrowDirection==='ArrowUp' && this.currentSelector !=0){\n                    this.swapContents('up');\n                }\n            }\n\n            /**\n             * 메모기능 구현\n             * selector Mode 일 때 '/'를 누르면 메모 모드로 들어가기\n             * input창이 떠야하고 -> 입력하면 this.props._contents가 업데이트 되어야 함\n             * _contents의 자료구조는 list 이어야 하는가? component이어야 하는가?\n             * 아니면 javascript 구조로 class를 만들어야 하는가? 고민이네\n             * ----> class로 만들어서 memo랑 같이 관리하자 ㅇㅇ 이게 답인듯\n             */\n            if(this.actionMode === 'selectorMode' && e.key === '/'){\n                if(this.wirteContentMode === 'todoList') this.wirteContentMode = 'memoList';\n                else this.wirteContentMode = 'todoList';\n                this.forceUpdate();\n            }\n\n            /*\n                delete 기능 구현\n            */\n            if(e.shiftKey && e.key === 'Delete'){\n                var _deleteContents = Array.from(this.props._contents)\n                if(this.props._contents.length ===1){\n                    _deleteContents = []\n                    this.currentSelector = this.currentSelector-1;\n                    this.mode = 'writeMode'\n                }\n                else if(this.props._contents.length !==0){\n                    for(var i=this.currentSelector; i<_deleteContents.length-1; i++){\n                        _deleteContents[i] = _deleteContents[i+1];\n                    }\n                    _deleteContents = _deleteContents.slice(0,_deleteContents.length-1);\n                    if(this.currentSelector === this.props._contents.length-1){\n                        this.currentSelector = this.currentSelector-1;\n                    }\n                }\n                this.props.updateContentsTodoList(_deleteContents);\n            }\n            /*\n                writeMode vs selectorMode \n                selectorMode면 움직이고 있는 중입니다.\n            */\n            if(37<=e.keyCode && e.keyCode<=40){\n                var _pressArrowDirection = e.key;\n                if(_pressArrowDirection === 'ArrowDown'){\n                    if(this.actionMode==='writeMode' && this.props._contents.length!==0){\n                        this.currentSelector = 0;\n                        this.actionMode = 'selectorMode'\n                        this.props.modeChange('selectorMode')\n                    }else if(this.actionMode === 'selectorMode'){\n                        this.currentSelector = (this.currentSelector === this.props._contents.length-1)? this.props._contents.length-1 : this.currentSelector+1;                        \n                    }\n                }else if(_pressArrowDirection === 'ArrowUp'){\n                    if(this.actionMode === 'selectorMode'){\n                        if(this.currentSelector === 0){\n                            this.actionMode ='writeMode'\n                            this.props.modeChange('selectorMode')\n                        }else{\n                            this.currentSelector = (this.currentSelector === 0)? 0 : this.currentSelector-1;\n                        }\n                    }\n                }\n                this.forceUpdate();\n            }//end arrow if test\n            \n        })\n    }\n\n\n\n\n    makeTodoElementByOrder(selectNumber, mode){\n        \n        var renderList =[];\n        var renderContainer = Array.from(this.props._contents);\n        var i = 0;\n        if(mode === 'selectorMode'){\n                while(i<renderContainer.length){\n                    if(selectNumber!==-1 && i === selectNumber){\n                        // renderContainer[i].memoList.push(\"hi\");\n                        // var temp = this.structTodoMemo(renderContainer[i]);\n                        // console.log(temp);\n                        renderList.push(<div className=\"todoMainElement-now\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n                    }else{\n                        renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n                    }\n                    i=i+1;\n                }\n        }else{\n\n            renderList.push(TodoMemoDivRender(renderContainer[i]));\n\n            //render default -> input todolist\n            while(i<renderContainer.length){\n                renderList.push(<div className=\"todoMainElement\" key={renderContainer[i].todolist}>{renderContainer[i].todolist}</div>);\n                i=i+1;\n            }\n            \n            \n        }\n        return renderList;\n    }\n\n\n    render(){\n        var renderList = this.makeTodoElementByOrder(this.currentSelector,this.actionMode);\n        return(\n            <div>\n                {renderList}\n            </div>\n            \n\n        )\n    }\n}\n\nexport default RenderTodoList;"]},"metadata":{},"sourceType":"module"}