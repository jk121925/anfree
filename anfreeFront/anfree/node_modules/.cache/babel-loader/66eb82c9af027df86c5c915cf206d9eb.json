{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\";\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\";\nimport Modal from \"./Modal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppTodolist(props) {\n  _s();\n\n  const [prevTodoList, nextTodoList] = useState([[], [], []]);\n  const [prevModalState, nextModalState] = useState(false);\n\n  const closeModal = () => {\n    nextModalState(false);\n  };\n\n  const modalMessage = nextprev => {\n    if (nextprev == 'Next') {\n      let returnstr;\n\n      if (nextprev === 'Next') {\n        returnstr = \"Few second after you go to Next step\";\n      } else if (nextprev === 'Prev') {\n        returnstr = \"Few second after you go to Previous step\";\n      }\n\n      return returnstr;\n    }\n  }; //Modal logic\n\n\n  const isInitialMount = useRef(false);\n  useEffect(() => {\n    if (!isInitialMount.current) {\n      isInitialMount.current = true;\n    } else {\n      nextModalState(true);\n    }\n  }, [props.nowStage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      _modalState: prevModalState,\n      _header: props.stageState[props.nowStage],\n      closeModal: closeModal,\n      children: modalMessage('Next')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), props.nowStage === 0 ? /*#__PURE__*/_jsxDEV(ControllerTodoInput, {\n      _stage: props.nowStage,\n      _contents: prevTodoList,\n      updateContents: nextTodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : null, props.nowStage === 0 ? /*#__PURE__*/_jsxDEV(ControllerReadyTodoList, {\n      _contents: prevTodoList,\n      _stage: props.nowStage,\n      ㅁ: true,\n      updateContentsTodoList: nextTodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this) : props.nowStage === 1 ? /*#__PURE__*/_jsxDEV(ControllerFilterTodoList, {\n      _contents: prevTodoList,\n      _stage: props.nowStage,\n      updateContentsTodoList: nextTodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : console.log(\"hi\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppTodolist, \"cQL8g24uYT4UwE0/1b4tfwi9ULs=\");\n\n_c = AppTodolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTodolist\");","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js"],"names":["React","useEffect","useState","useRef","ControllerReadyTodoList","ControllerTodoInput","ControllerFilterTodoList","Modal","AppTodolist","props","prevTodoList","nextTodoList","prevModalState","nextModalState","closeModal","modalMessage","nextprev","returnstr","isInitialMount","current","nowStage","stageState","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,uBAAP,MAAoC,8BAApC;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BT,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAD,CAA7C;AACA,QAAM,CAACU,cAAD,EAAiBC,cAAjB,IAAmCX,QAAQ,CAAC,KAAD,CAAjD;;AACA,QAAMY,UAAU,GAAG,MAAK;AAACD,IAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,GAA/C;;AAEA,QAAME,YAAY,GAAIC,QAAD,IAAY;AAC/B,QAAGA,QAAQ,IAAI,MAAf,EAAsB;AACpB,UAAIC,SAAJ;;AACA,UAAGD,QAAQ,KAAG,MAAd,EAAqB;AACnBC,QAAAA,SAAS,GAAG,sCAAZ;AACD,OAFD,MAEM,IAAGD,QAAQ,KAAG,MAAd,EAAqB;AACzBC,QAAAA,SAAS,GAAG,0CAAZ;AACD;;AACD,aAAOA,SAAP;AACD;AACF,GAVD,CALyC,CAiBzC;;;AACA,QAAMC,cAAc,GAAGf,MAAM,CAAC,KAAD,CAA7B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACiB,cAAc,CAACC,OAApB,EAA6B;AAC3BD,MAAAA,cAAc,CAACC,OAAf,GAAyB,IAAzB;AACD,KAFD,MAEO;AACLN,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GANQ,EAMP,CAACJ,KAAK,CAACW,QAAP,CANO,CAAT;AAQA,sBACE;AAAA,4BACE,QAAC,KAAD;AACA,MAAA,WAAW,EAAER,cADb;AAEA,MAAA,OAAO,EAAEH,KAAK,CAACY,UAAN,CAAiBZ,KAAK,CAACW,QAAvB,CAFT;AAGA,MAAA,UAAU,EAAEN,UAHZ;AAAA,gBAKCC,YAAY,CAAC,MAAD;AALb;AAAA;AAAA;AAAA;AAAA,YADF,EAUGN,KAAK,CAACW,QAAN,KAAmB,CAAnB,gBACC,QAAC,mBAAD;AACA,MAAA,MAAM,EAAIX,KAAK,CAACW,QADhB;AAEA,MAAA,SAAS,EAAIV,YAFb;AAIA,MAAA,cAAc,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADD,GAMC,IAhBJ,EAkBKF,KAAK,CAACW,QAAN,KAAmB,CAApB,gBACE,QAAC,uBAAD;AACE,MAAA,SAAS,EAAEV,YADb;AAEE,MAAA,MAAM,EAAID,KAAK,CAACW,QAFlB;AAE2B,MAAA,CAAC,MAF5B;AAGE,MAAA,sBAAsB,EAAET;AAH1B;AAAA;AAAA;AAAA;AAAA,YADF,GAOGF,KAAK,CAACW,QAAN,KAAmB,CAApB,gBACE,QAAC,wBAAD;AACE,MAAA,SAAS,EAAEV,YADb;AAEE,MAAA,MAAM,EAAID,KAAK,CAACW,QAFlB;AAGE,MAAA,sBAAsB,EAAET;AAH1B;AAAA;AAAA;AAAA;AAAA,YADF,GAOEW,OAAO,CAACC,GAAR,CAAY,IAAZ,CAhCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAtEuBf,W;;KAAAA,W","sourcesContent":["import React, {useEffect, useState, useRef} from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\nimport Modal from \"./Modal.js\";\n\nexport default function AppTodolist(props) {\n  const [prevTodoList, nextTodoList] = useState([[],[],[]]);\n  const [prevModalState, nextModalState] = useState(false);\n  const closeModal = () =>{nextModalState(false)};\n\n  const modalMessage = (nextprev)=>{\n    if(nextprev == 'Next'){\n      let returnstr;\n      if(nextprev==='Next'){\n        returnstr = \"Few second after you go to Next step\";\n      }else if(nextprev==='Prev'){\n        returnstr = \"Few second after you go to Previous step\"\n      }\n      return returnstr;\n    }\n  }\n\n  //Modal logic\n  const isInitialMount = useRef(false);\n  useEffect(() => {\n    if (!isInitialMount.current) {\n      isInitialMount.current = true;\n    } else {\n      nextModalState(true);  \n    }\n  },[props.nowStage]);\n\n  return(\n    <div>\n      <Modal\n      _modalState={prevModalState}\n      _header={props.stageState[props.nowStage]}\n      closeModal={closeModal}\n      >\n      {modalMessage('Next')}\n      </Modal>\n\n\n      {props.nowStage === 0 ? (\n        <ControllerTodoInput \n        _stage = {props.nowStage}\n        _contents = {prevTodoList} \n\n        updateContents={nextTodoList}></ControllerTodoInput>\n      ):null}\n      {\n        (props.nowStage === 0) ? (\n          <ControllerReadyTodoList \n            _contents={prevTodoList}\n            _stage = {props.nowStage}ㅁ\n            updateContentsTodoList={nextTodoList}\n          ></ControllerReadyTodoList>\n        ) : (\n          (props.nowStage === 1) ? (\n            <ControllerFilterTodoList \n              _contents={prevTodoList}\n              _stage = {props.nowStage}\n              updateContentsTodoList={nextTodoList}\n          ></ControllerFilterTodoList>\n          ) : (\n            console.log(\"hi\")\n          )\n        )\n\n\n      }\n    </div>\n    \n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}