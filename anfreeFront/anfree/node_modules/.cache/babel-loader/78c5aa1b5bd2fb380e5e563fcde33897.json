{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js\";\nimport React, { Component } from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\";\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\";\nimport Modal from \"./Modal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AppTodolist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contents: [[], [], []],\n      stage: 0,\n      modalState: false,\n      NextPrev: 'Next',\n      defaultActionState: \"writeMode\"\n    };\n  }\n\n  modalMessage(NextPrev) {\n    let returnstr;\n\n    if (NextPrev === 'Next') {\n      returnstr = \"Few second after you go to Next step\";\n    } else if (NextPrev === 'Prev') {\n      returnstr = \"Few second after you go to Previous step\";\n    }\n\n    return returnstr;\n  } // componentDidMount(){\n  //   window.addEventListener('keydown',(e)=>{\n  //     if(e.shiftKey && e.key ==='Enter' && this.state.stage!==2){\n  //       this.setState({\n  //         stage : this.state.stage+1,\n  //         modalState : !this.state.modalState,\n  //         NextPrev : 'Next',\n  //         defaultActionState : (this.state.stage!==0) ?  \"selectorMode\" :\"writeMode\",\n  //       })\n  //     }\n  //     else if(e.shiftKey && e.key === 'Backspace' && this.state.stage!==0){\n  //       this.setState({\n  //         stage : this.state.stage-1,\n  //         modalState : !this.state.modalState,\n  //         NextPrev : 'Prev',\n  //         defaultActionState : (this.state.stage!==0) ? \"writeMode\" : \"selectorMode\"\n  //       })\n  //     }\n  //     this.props.stageChange(this.state.stage);\n  //   })\n  // }\n\n\n  render() {\n    // console.log(this.state);\n    // console.log(\"apptodoList stage : \",this.state.stage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        _modalState: this.state.modalState,\n        _header: this.props._stageState[this.state.stage],\n        closeModal: function () {\n          this.setState({\n            modalState: false\n          });\n        }.bind(this),\n        children: this.modalMessage(this.state.NextPrev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), this.state.stage === 0 ? /*#__PURE__*/_jsxDEV(ControllerTodoInput, {\n        _stage: this.props._stageState[this.state.stage],\n        _contents: this.state.contents,\n        updateContents: function (updatelist) {\n          this.setState({\n            contents: updatelist\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this) : null, this.state.stage === 0 ? /*#__PURE__*/_jsxDEV(ControllerReadyTodoList, {\n        _contents: this.state.contents // _stage = {this.props._stageState[this.state.stage]}\n        ,\n        _stage: this.state.stage,\n        updateContentsTodoList: function (updatelist) {\n          this.setState({\n            contents: updatelist\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this) : this.state.stage === 1 ? /*#__PURE__*/_jsxDEV(ControllerFilterTodoList, {\n        _contents: this.state.contents // _stage = {this.props._stageState[this.state.stage]}\n        ,\n        _stage: this.state.stage,\n        updateContentsTodoList: function (updatelist) {\n          this.setState({\n            contents: updatelist\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this) : console.log(\"hi\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default AppTodolist;","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/AppTodolist.js"],"names":["React","Component","ControllerReadyTodoList","ControllerTodoInput","ControllerFilterTodoList","Modal","AppTodolist","constructor","props","state","contents","stage","modalState","NextPrev","defaultActionState","modalMessage","returnstr","render","_stageState","setState","bind","updatelist","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport ControllerReadyTodoList from \"./ControllerReadyTodoList.js\"\nimport ControllerTodoInput from \"./ControllerTodoInput.js\";\nimport ControllerFilterTodoList from \"./ControllerFilterTodoList.js\"\nimport Modal from \"./Modal.js\";\n\n\n\nclass AppTodolist extends Component{\n    constructor(props){\n      super(props);\n      \n      this.state={\n        contents :[[],[],[]],\n        stage : 0,\n        modalState : false,\n        NextPrev : 'Next',\n        defaultActionState : \"writeMode\"\n      }\n    }\n\n    modalMessage(NextPrev){\n      let returnstr;\n      if(NextPrev==='Next'){\n        returnstr = \"Few second after you go to Next step\";\n      }else if(NextPrev==='Prev'){\n        returnstr = \"Few second after you go to Previous step\"\n      }\n      return returnstr;\n    }\n\n\n\n    // componentDidMount(){\n    //   window.addEventListener('keydown',(e)=>{\n    //     if(e.shiftKey && e.key ==='Enter' && this.state.stage!==2){\n    //       this.setState({\n    //         stage : this.state.stage+1,\n    //         modalState : !this.state.modalState,\n    //         NextPrev : 'Next',\n    //         defaultActionState : (this.state.stage!==0) ?  \"selectorMode\" :\"writeMode\",\n    //       })\n    //     }\n    //     else if(e.shiftKey && e.key === 'Backspace' && this.state.stage!==0){\n    //       this.setState({\n    //         stage : this.state.stage-1,\n    //         modalState : !this.state.modalState,\n    //         NextPrev : 'Prev',\n    //         defaultActionState : (this.state.stage!==0) ? \"writeMode\" : \"selectorMode\"\n    //       })\n    //     }\n    //     this.props.stageChange(this.state.stage);\n\n    //   })\n    // }\n\n\n    \n\n\n    render(){\n      // console.log(this.state);\n      // console.log(\"apptodoList stage : \",this.state.stage);\n      return(\n        <div>\n          \n          <Modal\n          _modalState={this.state.modalState}\n          _header={this.props._stageState[this.state.stage]}\n          \n          closeModal={function(){\n            this.setState({\n              modalState : false\n            })\n          }.bind(this)}\n          >\n            {this.modalMessage(this.state.NextPrev)}\n          </Modal>\n\n\n          {this.state.stage === 0 ? (\n            <ControllerTodoInput \n            _stage = {this.props._stageState[this.state.stage]}\n            _contents = {this.state.contents} \n  \n            updateContents={function(updatelist){\n              this.setState({\n                contents : updatelist,\n              })\n            }.bind(this)}></ControllerTodoInput>\n          ):null}\n          {\n            (this.state.stage === 0) ? (\n              <ControllerReadyTodoList \n                _contents={this.state.contents}\n                // _stage = {this.props._stageState[this.state.stage]}\n                _stage = {this.state.stage}\n                updateContentsTodoList={function(updatelist){\n                  this.setState({\n                    contents : updatelist\n                  })\n                }.bind(this)}\n              ></ControllerReadyTodoList>\n            ) : (\n              (this.state.stage === 1) ? (\n                <ControllerFilterTodoList \n                  _contents={this.state.contents}\n                  // _stage = {this.props._stageState[this.state.stage]}\n                  _stage = {this.state.stage}\n                  updateContentsTodoList={function(updatelist){\n                    this.setState({\n                      contents : updatelist\n                    })\n                  }.bind(this)}\n              ></ControllerFilterTodoList>\n              ) : (\n                console.log(\"hi\")\n              )\n            )\n\n\n          }\n        </div>\n        \n      );\n    }\n  }\n\n  export default AppTodolist;"]},"metadata":{},"sourceType":"module"}