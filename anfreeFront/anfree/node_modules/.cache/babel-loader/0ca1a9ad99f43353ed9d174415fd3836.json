{"ast":null,"code":"var _jsxFileName = \"/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/Todolist.js\";\nimport React, { Component } from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\";\nimport RenderTodoInput from \"./RenderTodoInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todolist extends Component {\n  constructor(props) {\n    super(props);\n    this._todoMode = 'writeTodo';\n    this.contentsMaxIdx = 0;\n    this.state = {\n      contents: [],\n      // _todoMode : 'writeTodo',\n      _pressCnt: 0\n    };\n  }\n\n  render() {\n    console.log(this.state.contents[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RenderTodoInput, {\n        _contents: this.state.contents,\n        updateContents: function (updatelist) {\n          this.contentsMaxIdx = this.contentsMaxIdx + 1;\n          this.setState({\n            contents: updatelist\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RenderTodoList, {\n        _contents: this.state.contents,\n        modeChange: function (changeMode) {\n          console.log(\"child : todoList call changeMode fucntion \" + changeMode);\n          this._todoMode = changeMode;\n          this.forceUpdate();\n        }.bind(this),\n        updateContentsTodoList: function (updatelist) {\n          this.setState({\n            contents: updatelist\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Todolist;","map":{"version":3,"sources":["/Users/jonggeun/Desktop/anfree/anfreeFront/anfree/src/TodoList/Todolist.js"],"names":["React","Component","RenderTodoList","RenderTodoInput","Todolist","constructor","props","_todoMode","contentsMaxIdx","state","contents","_pressCnt","render","console","log","updatelist","setState","bind","changeMode","forceUpdate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;;AAIA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,WAAjB;AACA,SAAKC,cAAL,GAAqB,CAArB;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE,EADD;AAET;AACAC,MAAAA,SAAS,EAAG;AAHH,KAAX;AAKD;;AAMDC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAZ;AACA,wBACE;AAAA,8BACE,QAAC,eAAD;AACA,QAAA,SAAS,EAAI,KAAKD,KAAL,CAAWC,QADxB;AAEA,QAAA,cAAc,EAAE,UAASK,UAAT,EAAoB;AAClC,eAAKP,cAAL,GAAsB,KAAKA,cAAL,GAAoB,CAA1C;AACA,eAAKQ,QAAL,CAAc;AACZN,YAAAA,QAAQ,EAAGK;AADC,WAAd;AAGD,SALe,CAKdE,IALc,CAKT,IALS;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,cAAD;AACE,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWC,QADxB;AAGE,QAAA,UAAU,EAAI,UAASQ,UAAT,EAAoB;AAChCL,UAAAA,OAAO,CAACC,GAAR,CAAY,+CAA+CI,UAA3D;AACA,eAAKX,SAAL,GAAiBW,UAAjB;AACA,eAAKC,WAAL;AACD,SAJa,CAIZF,IAJY,CAIP,IAJO,CAHhB;AASE,QAAA,sBAAsB,EAAE,UAASF,UAAT,EAAoB;AAC1C,eAAKC,QAAL,CAAc;AACZN,YAAAA,QAAQ,EAAGK;AADC,WAAd;AAGD,SAJuB,CAItBE,IAJsB,CAIjB,IAJiB;AAT1B;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AA/C2B;;AAkD9B,eAAeb,QAAf","sourcesContent":["import React, {Component} from \"react\";\nimport RenderTodoList from \"./RenderTodoList.js\"\nimport RenderTodoInput from \"./RenderTodoInput.js\";\n\n\n\nclass Todolist extends Component{\n    constructor(props){\n      super(props);\n      this._todoMode = 'writeTodo';\n      this.contentsMaxIdx =0;\n      this.state={\n        contents :[],\n        // _todoMode : 'writeTodo',\n        _pressCnt : 0\n      }\n    }\n    \n    \n\n\n\n    render(){\n      console.log(this.state.contents[0]);\n      return(\n        <div>\n          <RenderTodoInput \n          _contents = {this.state.contents} \n          updateContents={function(updatelist){\n            this.contentsMaxIdx = this.contentsMaxIdx+1;\n            this.setState({\n              contents : updatelist,\n            })\n          }.bind(this)}></RenderTodoInput>\n          <RenderTodoList \n            _contents={this.state.contents}\n\n            modeChange = {function(changeMode){\n              console.log(\"child : todoList call changeMode fucntion \" + changeMode)\n              this._todoMode = changeMode;\n              this.forceUpdate();\n            }.bind(this)}\n\n            updateContentsTodoList={function(updatelist){\n              this.setState({\n                contents : updatelist\n              })\n            }.bind(this)}\n          ></RenderTodoList>\n          \n        </div>\n        \n      );\n    }\n  }\n\n  export default Todolist;"]},"metadata":{},"sourceType":"module"}